{"version":3,"sources":["components/Controls/Controls.module.scss","components/ArrayWindow/ArrayWindow.module.scss","components/Stats/Stats.module.scss","components/classes/Element.js","components/utils/utils.js","components/Sorts/Sorts.js","components/ArrayWindow/ArrayWindow.js","components/Stats/Stats.js","components/utils/initFunctions.js","components/utils/shuffles.js","components/Controls/Controls.js","components/ArrayVisualizer/ArrayVisualizer.js","reportWebVitals.js","index.js"],"names":["module","exports","Element","value","type","color","this","randomInt","a","b","Math","trunc","random","deepArrayCopy","arr","out","i","getValue","getType","getColor","push","Sorts","arrayVisualizer","pseudoArray","getPseudoArray","state","getState","compare","bind","swap","read","write","arrLength","getArrLength","lo","hi","pivot","j","p","LLQuickPartition","LLQuickSort","len","m","floor","SlowSort","low","mid","high","leftArray","Array","rightArray","length","leftIndex","rightIndex","MergeSort","classicMerge","n","largest","l","r","heapify","key","console","log","t","StoogeSort","ArrayWindow","props","array","styleSheet","height","backgroundColor","style","className","styles","bar","width","arrayContainer","Stats","statsContainer","sortName","writes","initFunctions","linear","x","reverse","pipeOrgan","shuffles","fullShuffle","instructions","randomIndex","almostSorted","randomIndexA","randomIndexB","Controls","isControlShow","sorts","updateArrLength","initArray","slider","document","getElementById","controlsContainer","controls","btn","showToggleBtn","display","innerHTML","func","shuffleArray","sort","sortClickEvent","stopSort","tmp","onClick","methods","toCheck","obj","Object","getOwnPropertyNames","getPrototypeOf","filter","e","getAllMethods","includes","sortArray","id","textCenter","min","max","defaultValue","step","onChange","genInitFunctions","getShuffles","abortSort","getSorts","React","Component","colors","ArrayVisualizer","comparisons","delays","Swap","Write","Comp","Unmark","delayIncConst","instruction","timeoutArray","delayInc","ctx","window","AudioContext","webkitAudioContext","osc","createOscillator","k","frequency","gainNode","createGain","gain","connect","destination","linearRampToValueAtTime","currentTime","start","stop","clearTimeout","resetDelay","setState","index","args","saveArr","tmpArr","setType","setColor","indexes","mark","saveOnce","unmark","markIndexes","markArgs","markMany","setTimeout","unmarkMany","delay","playSound","swapInArr","markUnmarkMany","curWrites","swapWithDelay","setValue","writeInArr","writeWithDelay","sign","curComparisons","from","keys","setToState","element","nullify","name","sortBind","val","updateDelayInc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.af7a1470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"Controls_textCenter__3_8jn\",\"controls\":\"Controls_controls__3X5vt\",\"showToggleBtn\":\"Controls_showToggleBtn__2CbSs\",\"slider\":\"Controls_slider__3IxWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"ArrayWindow_arrayContainer__jfaB8\",\"bar\":\"ArrayWindow_bar__30QYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__1qOnq\"};","const types = {\r\n\r\n}\r\n\r\nconst colors = {\r\n\r\n}\r\n\r\nexport class Element{\r\n\r\n    value;\r\n    color;\r\n    type;\r\n\r\n    // constructor(args){\r\n    //     this.value = args.value;\r\n    //     this.type = args.type;\r\n    //     this.color = args.color || colors[args.type];\r\n    // }\r\n\r\n    constructor(value, type, color) {\r\n            this.value = value;\r\n            this.type = type;\r\n            this.color = color;\r\n    }\r\n\r\n    getValue(){\r\n        return this.value;\r\n    }\r\n    setValue(value){\r\n        this.value = value;\r\n    }\r\n\r\n    getColor(){\r\n        return this.color;\r\n    }\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    setType(type){\r\n        this.type = type;\r\n    }\r\n}","import {Element} from \"../classes/Element\";\r\nexport function random(a, b) {\r\n    return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInt(a, b) {\r\n    return Math.trunc(random(a, b))\r\n}\r\n\r\nexport function swapObj(json) {\r\n    let ret = {};\r\n    for (let key in json) {\r\n        ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function sleep(ms) {\r\n    ms += new Date().getTime();\r\n    while (new Date() < ms) {\r\n    }\r\n}\r\n\r\nexport function getAllMethods(toCheck) {\r\n    const props = [];\r\n    let obj = toCheck;\r\n    do {\r\n        props.push(...Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props.sort().filter((e, i, arr) => {\r\n        if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n    });\r\n}\r\n\r\nexport function deepArrayCopy(arr){\r\n    let out = [];\r\n    for(let i of arr){\r\n        let value = i.getValue();\r\n        let type = i.getType();\r\n        let color = i.getColor();\r\n        out.push(new Element(value, type, color))\r\n    }\r\n    return out;\r\n}","export class Sorts {\r\n    arrayVisualizer;\r\n    array;\r\n    pseudoArray;\r\n\r\n    compare;\r\n    swap;\r\n    write;\r\n\r\n    arrLength;\r\n\r\n    constructor(arrayVisualizer) {\r\n        // super(arrayVisualizer)\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.pseudoArray = this.arrayVisualizer.getPseudoArray()\r\n        this.state = this.arrayVisualizer.getState()\r\n        this.compare = this.arrayVisualizer.compare.bind(arrayVisualizer)\r\n        this.swap = this.arrayVisualizer.swap.bind(arrayVisualizer)\r\n        this.read = this.arrayVisualizer.read.bind(arrayVisualizer)\r\n        this.write = this.arrayVisualizer.write.bind(arrayVisualizer)\r\n        this.arrLength = this.arrayVisualizer.getArrLength();\r\n    }\r\n\r\n    LLQuickPartition(lo, hi) {\r\n        let pivot = hi;\r\n        let i = lo;\r\n        for (let j = lo; j < hi; j++) {\r\n            if (this.compare(j, pivot, \"<\")) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, hi);\r\n        return i;\r\n    }\r\n\r\n    LLQuickSort(lo, hi) {\r\n        if (lo < hi) {\r\n            let p = this.LLQuickPartition(lo, hi);\r\n            this.LLQuickSort(lo, p - 1);\r\n            this.LLQuickSort(p + 1, hi);\r\n        }\r\n    }\r\n\r\n    BubbleSort() {\r\n        let len = this.arrLength;\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                if (this.compare(j, j + 1, \">\")) {\r\n                    this.swap(j, j + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    SlowSort(i, j) {\r\n        if (i >= j) {\r\n            return;\r\n        }\r\n        let m = Math.floor((i + j) / 2);\r\n        this.SlowSort(i, m);\r\n        this.SlowSort(m + 1, j);\r\n        if (this.compare(j, m, \"<\")) {\r\n            this.swap(j, m)\r\n        }\r\n        this.SlowSort(i, j - 1)\r\n    }\r\n\r\n    classicMerge(low, mid, high) {\r\n        let leftArray = new Array(mid - low + 1);\r\n        let rightArray = new Array(high - mid);\r\n\r\n        for (let i = 0; i < leftArray.length; i++) {\r\n            leftArray[i] = this.read(low + i)\r\n        }\r\n        for (let i = 0; i < rightArray.length; i++) {\r\n            rightArray[i] = this.read(mid + i + 1);\r\n        }\r\n\r\n        let leftIndex = 0;\r\n        let rightIndex = 0;\r\n\r\n        for (let i = low; i < high + 1; i++) {\r\n            if (leftIndex < leftArray.length && rightIndex < rightArray.length) {\r\n                if (leftArray[leftIndex] < rightArray[rightIndex]) {\r\n                    this.write(i, leftArray[leftIndex])\r\n                    leftIndex++;\r\n                } else {\r\n                    this.write(i, rightArray[rightIndex])\r\n                    rightIndex++;\r\n                }\r\n            } else if (leftIndex < leftArray.length) {\r\n                this.write(i, leftArray[leftIndex])\r\n                leftIndex++;\r\n            } else if (rightIndex < rightArray.length) {\r\n                this.write(i, rightArray[rightIndex])\r\n                rightIndex++;\r\n            }\r\n        }\r\n    }\r\n\r\n    MergeSort(low, high) {\r\n        if (high <= low) return;\r\n\r\n        let mid = Math.trunc((low + high) / 2)\r\n        this.MergeSort(low, mid);\r\n        this.MergeSort(mid + 1, high);\r\n        this.classicMerge(low, mid, high);\r\n    }\r\n\r\n    heapify(n, i) {\r\n        let largest = i;\r\n\r\n        let l = 2 * i + 1;\r\n        let r = 2 * i + 2;\r\n\r\n        if (l < n && this.compare(l, largest, \">\")) {\r\n            largest = l;\r\n        }\r\n        if (r < n && this.compare(r, largest, \">\")) {\r\n            largest = r;\r\n        }\r\n\r\n        if (largest !== i) {\r\n            this.swap(i, largest);\r\n            this.heapify(n, largest);\r\n        }\r\n    }\r\n\r\n    HeapSort() {\r\n        let n = this.arrLength;\r\n\r\n\r\n        for (let i = Math.trunc(n / 2) - 1; i >= 0; i--) {\r\n            this.heapify(n, i);\r\n        }\r\n\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            this.swap(0, i);\r\n            this.heapify(i, 0)\r\n        }\r\n    }\r\n\r\n    InsertionSort() {\r\n        let length = this.arrLength;\r\n        for (let i = 1; i < length; i++) {\r\n            let key = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= 0 && this.read(j) > key) {\r\n                this.write(j + 1, this.read(j))\r\n                j = j - 1;\r\n            }\r\n            this.write(j + 1, key)\r\n        }\r\n    }\r\n\r\n    StoogeSort(i, j) {\r\n        console.log(i)\r\n        console.log(j)\r\n        if (this.compare(i, j, \">\")) {\r\n            this.swap(i, j)\r\n        }\r\n        if (j - i > 1) {\r\n            let t = Math.trunc((j - i + 1) / 3)\r\n            this.StoogeSort(i, j - t)\r\n            this.StoogeSort(i + t, j)\r\n            this.StoogeSort(i, j - t)\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport styles from \"./ArrayWindow.module.scss\";\r\n\r\nexport function ArrayWindow(props){\r\n    let array = props.array\r\n    // let style = props.style\r\n\r\n    let arr = []\r\n\r\n    for (let i = 0; i < array.length; ++i) {\r\n        let styleSheet = {\r\n            height: array[i].getValue() / array.length * 100 + \"%\",\r\n            backgroundColor: \"rgb(\" + array[i].getColor() + \")\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    return (\r\n        <div style={{width: \"100%\"}}>\r\n            <div className={styles.arrayContainer}>\r\n                {arr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Stats.module.scss\";\r\n\r\nexport function Stats(props){\r\n    return(\r\n        <div className={styles.statsContainer}>\r\n            <div><b>Sort: {props.sortName}</b></div>\r\n            <div>Length: {props.arrLength}</div>\r\n            {/*<div>Comparisons: {props.comparisons}</div>*/}\r\n            <div>Writes: {props.writes}</div>\r\n        </div>\r\n    )\r\n}","export let initFunctions = {\r\n    linear: function linear(x, length) {\r\n        return x;\r\n    },\r\n    reverse: function reverse(x, length) {\r\n        return length - x;\r\n    },\r\n    pipeOrgan: function pipeOrgan(x, length) {\r\n        if (x < length / 2) {\r\n            return 2 * x;\r\n        } else {\r\n            return 2 * (length - x) - 1;\r\n        }\r\n    }\r\n}","import {randomInt} from \"./utils\";\r\n\r\nexport let shuffles = {\r\n    fullShuffle: function (len) {\r\n        let instructions = []\r\n        for (let i = 0; i < len; ++i) {\r\n            let randomIndex = randomInt(i, len)\r\n            instructions.push(\r\n                [\"swap\", i, randomIndex]\r\n            )\r\n        }\r\n        return instructions\r\n    },\r\n\r\n    almostSorted: function (len) {\r\n        let instructions = []\r\n        const amount = 0.1\r\n        for (let i = 0; i < len * amount; ++i) {\r\n            let randomIndexA = randomInt(i, len)\r\n            let randomIndexB = randomInt(i, len)\r\n            instructions.push(\r\n                [\"swap\", randomIndexA, randomIndexB]\r\n            )\r\n        }\r\n        return instructions\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport styles from \"./Controls.module.scss\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\nimport {getAllMethods} from \"../utils/utils\";\r\nimport {shuffles} from \"../utils/shuffles\";\r\n\r\n\r\nexport class Controls extends React.Component {\r\n    isControlShow\r\n    arrayVisualizer\r\n    sorts\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isControlShow = true;\r\n        this.arrayVisualizer = props.arrayVisualizer\r\n        this.sorts = props.sorts\r\n        this.arrayVisualizer.updateArrLength(100)\r\n        this.arrayVisualizer.initArray(initFunctions.linear)\r\n    }\r\n\r\n    updateArrLength() {\r\n        let slider = document.getElementById(styles.slider)\r\n\r\n        if (slider !== null) {\r\n            let len = slider.value\r\n            this.arrayVisualizer.updateArrLength(len)\r\n        }\r\n    }\r\n\r\n    toggleControlShow() {\r\n        // console.log(styles.controls)\r\n        let controlsContainer = document.getElementById(styles.controlsContainer)\r\n        let controls = document.getElementById(styles.controls)\r\n        let btn = document.getElementById(styles.showToggleBtn)\r\n        if (this.isControlShow) {\r\n            controls.style.display = \"none\"\r\n            controlsContainer.style.width = \"0\"\r\n            btn.innerHTML = \"&gt;&gt;\";\r\n        } else {\r\n            controls.style.display = \"block\"\r\n            controlsContainer.style.width = \"20rem\"\r\n            btn.innerHTML = \"&lt;&lt\";\r\n        }\r\n        this.isControlShow = !this.isControlShow\r\n    }\r\n\r\n    initArray(func){\r\n        this.arrayVisualizer.initArray(func, this.arrayVisualizer.arrLength, true)\r\n    }\r\n\r\n    shuffleArray(func){\r\n        this.arrayVisualizer.shuffleArray(func)\r\n    }\r\n\r\n    sortArray(sort){\r\n        this.arrayVisualizer.sortClickEvent(sort)\r\n    }\r\n\r\n    stopSort(){\r\n        this.arrayVisualizer.stopSort()\r\n    }\r\n\r\n    abortSort(){\r\n        this.stopSort()\r\n        this.initArray(initFunctions.linear)\r\n    }\r\n\r\n    genInitFunctions(){\r\n        // console.log(initFunctions)\r\n        let tmp = []\r\n        for (let i in initFunctions) {\r\n            tmp.push(\r\n                <button key={i} onClick={this.initArray.bind(this, initFunctions[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getSorts(){\r\n        let tmp = []\r\n        let methods = getAllMethods(this.sorts)\r\n        for (let i of methods) {\r\n            if(i.includes(\"Sort\"))\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortArray.bind(this, this.sorts[i])}>{i}</button>\r\n                )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getShuffles(){\r\n        let tmp = []\r\n        for(let i in shuffles){\r\n            tmp.push(\r\n                <button key={i} onClick={this.shuffleArray.bind(this, shuffles[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={styles.controlsContainer}>\r\n                {/*<div onClick={this.toggleControlShow.bind(this)} id={styles.showToggleBtn}>&lt;&lt;</div>*/}\r\n                <div id={styles.controls}>\r\n                    <div>\r\n                        <div className={styles.textCenter}>Array Size</div>\r\n                        <input id={styles.slider} type=\"range\" min=\"10\" max=\"300\" defaultValue={this.arrLength}\r\n                               step=\"10\"\r\n                               onChange={this.updateArrLength.bind(this)}/>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Init Array</div>\r\n                            <div>{this.genInitFunctions()}</div>\r\n                        </div>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Shuffle Array</div>\r\n                            <div>\r\n                                {/*<button onClick={this.shuffleArray.bind(this)}>Random</button>*/}\r\n                                <div>{this.getShuffles()}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort control</div>\r\n                            <div>\r\n                                <button onClick={this.abortSort.bind(this)}>Abort Sort(Recommended)</button>\r\n                                <button onClick={this.stopSort.bind(this)}>Stop Sort(Not Recommended)</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort Array</div>\r\n                            <div>\r\n                                {this.getSorts()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {deepArrayCopy, getAllMethods, randomInt} from \"../utils/utils\";\r\nimport {Sorts} from \"../Sorts/Sorts\"\r\nimport {ArrayWindow} from \"../ArrayWindow/ArrayWindow\";\r\nimport {Element} from \"../classes/Element\";\r\nimport {Stats} from \"../Stats/Stats\";\r\nimport {Controls} from \"../Controls/Controls\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\n\r\nconst colors = {\r\n    \"Unmarked\": [255, 255, 255],\r\n    \"Default\": [255, 0, 0],\r\n    \"Additional\": [randomInt(0, 256), randomInt(0, 256), randomInt(0, 256)],\r\n    \"Sorted\": [0, 255, 0],\r\n    \"Analysis\": [0, 0, 255]\r\n}\r\n\r\nexport class ArrayVisualizer extends React.Component {\r\n    delays;\r\n    delayInc;\r\n    pseudoArray;\r\n    arrLength\r\n    ctx\r\n    timeoutArray\r\n    sorts\r\n    delayIncConst\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.arrLength = 100\r\n        this.state = {\r\n            array: this.initArray(initFunctions.linear, this.arrLength),\r\n            sortName: \"\",\r\n            comparisons: 0,\r\n            writes: 0\r\n        }\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0\r\n        }\r\n        this.delayIncConst = 3000\r\n        this.instruction = [];\r\n        this.timeoutArray = [];\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.sorts = new Sorts(this);\r\n        this.arrLength = this.state.length\r\n        this.delayInc = this.delayIncConst/this.arrLength;\r\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        // this.updateArrLength(this.arrLength);\r\n    }\r\n\r\n    playSound(value) {\r\n        let osc = this.ctx.createOscillator();\r\n        osc.type = 'sine';\r\n\r\n        let k = value / this.arrLength\r\n        osc.frequency.value = 2000 * k + 200;\r\n\r\n\r\n        let addTime = 50\r\n\r\n        let gainNode = this.ctx.createGain()\r\n        gainNode.gain.value = 0;\r\n        osc.connect(gainNode)\r\n        gainNode.connect(this.ctx.destination)\r\n\r\n        gainNode.gain.linearRampToValueAtTime(0.05, this.ctx.currentTime + (this.delayInc + addTime) / 1000 / 2)\r\n        gainNode.gain.linearRampToValueAtTime(0, this.ctx.currentTime + (this.delayInc + addTime) / 1000)\r\n\r\n        osc.start();\r\n        osc.stop(this.ctx.currentTime + (this.delayInc + addTime) / 1000);\r\n\r\n    }\r\n\r\n    resetDelay() {\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0\r\n        }\r\n        for(let i of this.timeoutArray){\r\n            clearTimeout(i);\r\n        }\r\n        this.timeoutArray = []\r\n    }\r\n\r\n    nullify() {\r\n        this.resetDelay()\r\n        this.setState(\r\n            {\r\n                comparisons: 0,\r\n                writes: 0\r\n            }\r\n        )\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.writes = 0;\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.comparisons = 0;\r\n    }\r\n\r\n    mark(index, args, saveArr = true) {\r\n        let type = \"Default\"\r\n        let color = colors[\"Default\"]\r\n        let tmpArr = this.state.array\r\n        // Additional\r\n        if (args.type === \"Additional\") {\r\n            type = \"Additional\"\r\n            color = args.color\r\n            // console.log(color)\r\n        }\r\n        //Default\r\n        else if (!args.type || args.type === \"Default\") {\r\n            type = \"Default\"\r\n            color = colors[\"Default\"]\r\n        } else {\r\n            type = args.type\r\n            color = args.color\r\n        }\r\n\r\n        tmpArr[index].setType(type)\r\n        tmpArr[index].setColor(color)\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n        // console.log(color);\r\n    }\r\n\r\n    markMany(indexes, args, saveArr) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.mark(i, args, saveArr)\r\n            } else {\r\n                tmpArr = this.mark(i, args, saveArr)\r\n            }\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmark(index, saveArr = true) {\r\n        let tmpArr = this.state.array\r\n        tmpArr[index].setColor(colors[\"Unmarked\"])\r\n        tmpArr[index].setType(\"Unmarked\")\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmarkMany(indexes, saveArr, saveOnce) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.unmark(i, saveArr)\r\n            } else {\r\n                tmpArr = this.unmark(i, saveArr)\r\n            }\r\n        }\r\n        if (saveOnce) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n\r\n    markUnmarkMany(markIndexes, markArgs) {\r\n        this.markMany(markIndexes, markArgs, true)\r\n        this.timeoutArray.push(setTimeout(this.unmarkMany.bind(this), this.delays.Unmark += this.delayInc / 100, markIndexes, false, true))\r\n    }\r\n\r\n    swapWithDelay(a, b, mark, delay = this.delayInc, arr = this.pseudoArray, playSound) {\r\n        this.timeoutArray.push(setTimeout(this.swapInArr.bind(this), this.delays.Swap += delay, a, b, mark, arr, playSound))\r\n    }\r\n\r\n\r\n    swapInArr(a, b, mark = true, arr = this.pseudoArray, playSound=false) {\r\n        if(playSound) {\r\n            this.playSound(arr[b].getValue());\r\n        }\r\n        let tmpArr = arr\r\n        // console.log(\"SWAPPING:\" + tmpArr[a].getValue()+\"<->\"+tmpArr[b].getValue())\r\n        let tmp = tmpArr[a]\r\n        tmpArr[a] = tmpArr[b]\r\n        tmpArr[b] = tmp\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 2\r\n        })\r\n    }\r\n\r\n    swap(a, b) {\r\n        this.swapInArr(a, b, false, this.pseudoArray, false)\r\n        this.swapWithDelay(a, b, true, this.delayInc, this.state.array, true)\r\n    }\r\n\r\n    writeInArr(index, value, mark = true, arr = this.pseudoArray, playSound=false) {\r\n        if(playSound) {\r\n            this.playSound(value)\r\n        }\r\n        arr[index].setValue(value)\r\n        if (mark) {\r\n            this.markUnmarkMany([index], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 1\r\n        })\r\n    }\r\n\r\n    writeWithDelay(index, value, mark, delay = this.delayInc, arr = this.pseudoArray, playSound=true) {\r\n        this.timeoutArray.push(setTimeout(this.writeInArr.bind(this), this.delays.Write += delay, index, value, mark, arr, playSound))\r\n    }\r\n\r\n    write(index, value) {\r\n        this.writeInArr(index, value, false, this.pseudoArray, false)\r\n        this.writeWithDelay(index, value, true, this.delayInc, this.state.array, true)\r\n    }\r\n\r\n    read(index, arr = this.pseudoArray) {\r\n        // this.markUnmarkMany([index], {type: \"Default\"})\r\n        return arr[index].getValue()\r\n    }\r\n\r\n    compare(a, b, sign = \"<\", arr = this.pseudoArray) {\r\n        // this.compMainArrWithDelay(a, b, false)\r\n        if (sign === \"<\") {\r\n            return arr[a].getValue() < arr[b].getValue()\r\n        } else if (sign === \"<=\") {\r\n            return arr[a].getValue() <= arr[b].getValue()\r\n        } else if (sign === \">\") {\r\n            return arr[a].getValue() > arr[b].getValue()\r\n        } else if (sign === \">=\") {\r\n            return arr[a].getValue() >= arr[b].getValue()\r\n        } else {\r\n            return arr[a].getValue() === arr[b].getValue()\r\n        }\r\n    }\r\n\r\n    compMainArr(a, b, mark = false) {\r\n        let curComparisons = this.state.comparisons;\r\n        this.setState({\r\n            comparisons: curComparisons + 1\r\n        })\r\n        console.log(\"Comparisons: \" + this.state.comparisons + \" \" + a + \" \" + b)\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Additional\", color: [0, 0, 255]})\r\n        }\r\n    }\r\n\r\n    compMainArrWithDelay(a, b, mark = false) {\r\n        // setTimeout(this.compMainArr.bind(this), this.delays.Comp += this.delayInc, a, b, mark)\r\n    }\r\n\r\n    getArrayVisualizer() {\r\n        return this;\r\n    }\r\n\r\n    getPseudoArray() {\r\n        return this.pseudoArray;\r\n    }\r\n\r\n    getState(){\r\n        return this.state\r\n    }\r\n\r\n    getArrLength(){\r\n        return this.arrLength;\r\n    }\r\n\r\n    stopSort(){\r\n        this.resetDelay()\r\n        this.unmarkMany(Array.from(Array(this.arrLength).keys()), false, true)\r\n    }\r\n\r\n    initArray(func, length, setToState=false) {\r\n        let arr = []\r\n        for (let i = 0; i < length; ++i) {\r\n            let element = new Element(func(i, length), 0, [255, 255, 255])\r\n            arr.push(element)\r\n        }\r\n        if(setToState){\r\n            this.setState({\r\n                array: arr\r\n            })\r\n        }else {\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    shuffleArray(func) {\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: \"Shuffle\"\r\n        })\r\n\r\n        let instructions = func(this.arrLength);\r\n        for(let i of instructions){\r\n            if(i[0] === \"swap\"){\r\n                setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i[1], i[2], true, this.state.array, true)\r\n            }\r\n        }\r\n\r\n        // for (let i = 0; i < this.arrLength; ++i) {\r\n        //     let randomIndex = randomInt(i, this.arrLength)\r\n        //     if (this.delayInc === 0) {\r\n        //         this.swapWithDelay(i, randomIndex, true, this.delayInc / 5, this.state.array, false)\r\n        //     } else {\r\n        //         setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i, randomIndex, true, this.state.array, true)\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    shuffleClickEvent() {\r\n        this.shuffleArray()\r\n    }\r\n\r\n\r\n    sortClickEvent(sort) {\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: sort.name\r\n        })\r\n        this.nullify()\r\n\r\n        let sortBind = sort.bind(this.sorts, 0, this.arrLength - 1)\r\n        sortBind()\r\n    }\r\n\r\n\r\n    updateDelayInc(val){\r\n        this.delayInc = val/this.arrLength;\r\n    }\r\n\r\n    updateArrLength(len){\r\n        this.arrLength = len\r\n        this.setState({\r\n            array: this.initArray(initFunctions.linear, this.arrLength)\r\n        })\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n\r\n        this.sorts.arrLength = this.getArrLength()\r\n        this.updateDelayInc(this.delayIncConst)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stats sortName={this.state.sortName} comparisons={this.state.comparisons} writes={this.state.writes} arrLength={this.arrLength}/>\r\n                <div style={{display: \"flex\"}}>\r\n                    <ArrayWindow array={this.state.array}/>\r\n                </div>\r\n                <div>\r\n                    <Controls arrayVisualizer={this} sorts={this.sorts}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {ArrayVisualizer} from \"./components/ArrayVisualizer/ArrayVisualizer\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ArrayVisualizer></ArrayVisualizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}