{"version":3,"sources":["components/Sorts/Sort.js","components/Controls/Controls.module.scss","components/ArrayWindow/ArrayWindow.module.scss","components/Sorts/Sorts.js","components/Stats/Stats.module.scss","components/Sorts sync /^/.*/.js$","components/Sorts/BubbleSort.js","components/Sorts/HeapSort.js","components/Sorts/InsertionSort.js","components/Sorts/LLQuickSort.js","components/Sorts/MergeSort.js","components/Sorts/SlowSort.js","components/Sorts/StoogeSort.js","components/Sorts/TimSort.js","components/classes/Element.js","components/utils/utils.js","components/ArrayWindow/ArrayWindow.js","components/Stats/Stats.js","components/utils/initFunctions.js","components/utils/shuffles.js","components/Controls/Controls.js","components/ArrayVisualizer/ArrayVisualizer.js","reportWebVitals.js","index.js"],"names":["Sort","arrayVisualizer","this","pseudoArray","getPseudoArray","state","getState","compare","bind","swap","read","write","createAuxArray","removeAuxArray","auxRead","auxWrite","arrLength","getArrLength","sortName","warnLen","low","high","bucketsNum","module","exports","Sorts","sortsPaths","require","sortClickEvent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","BubbleSort","len","i","j","HeapSort","n","largest","l","r","heapify","Math","trunc","InsertionSort","length","key","LLQuickSort","lo","hi","pivot","p","partition","MergeSort","mid","leftArrayLen","rightArrayLen","leftArrayIndex","rightArrayIndex","leftIndex","rightIndex","merge","SlowSort","m","floor","StoogeSort","t","TimSort","MIN_MERGE","left","right","temp","len1","len2","x","k","minRun","minRunLength","insertionSort","min","size","timSort","Element","value","type","color","randomInt","a","b","random","deepArrayCopy","arr","out","getValue","getType","getColor","push","arraysEquals","every","v","ArrayWindow","props","array","mainArray","height","styleSheet","backgroundColor","style","className","styles","bar","width","arrayContainer","Stats","statsContainer","writes","initFunctions","linear","reverse","pipeOrgan","inversedPipeOrgan","shuffles","fullShuffle","instructions","randomIndex","cmd","almostSorted","randomIndexA","randomIndexB","Controls","isControlShow","sorts","updateArrLength","initArray","slider","document","getElementById","controlsContainer","controls","btn","showToggleBtn","display","innerHTML","func","shuffleArray","runSort","stopSort","tmp","onClick","sortsNames","getSortsNames","sortArray","element","setShowAuxArrays","checked","textCenter","max","defaultValue","step","onChange","toggleShowAuxArrays","name","defaultChecked","htmlFor","genInitFunctions","getShuffles","abortSort","getSorts","React","Component","colors","ArrayVisualizer","comparisons","auxArrays","delays","Swap","Write","Comp","Unmark","CreateAuxArray","RemoveAuxArray","delayIncConst","timeoutArray","pseudoAuxArrays","delayInc","showAuxArrays","ctx","window","AudioContext","webkitAudioContext","osc","createOscillator","frequency","gainNode","createGain","gain","connect","destination","linearRampToValueAtTime","currentTime","start","stop","clearTimeout","resetDelay","setState","index","args","saveArr","tmpArr","setType","setColor","indexes","mark","saveOnce","unmark","markIndexes","markArgs","markMany","setTimeout","unmarkMany","delay","playSound","swapInArr","markUnmarkMany","curWrites","setValue","writeInArr","sign","curComparisons","console","log","isPseudo","auxArrIndex","splice","arrIndex","val","Array","from","setToState","nullify","sort","getSortName","getWarnLen","confirm","includes","arrName","getNameByArray","arrNameInv","inverseArrayName","getArrayByName","swapWithDelay","writeWithDelay","auxWriteWithDelay","createAuxArrayWithDelay","removeAuxArrayWithDelay","updateDelayInc","genArrayWindows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.ef7fcdb2.chunk.js","sourcesContent":["export class Sort {\r\n    arrayVisualizer;\r\n    array;\r\n    pseudoArray;\r\n\r\n    compare;\r\n    swap;\r\n    write;\r\n    read;\r\n\r\n    createAuxArray\r\n    removeAuxArray\r\n\r\n    auxRead\r\n    auxWrite\r\n\r\n    arrLength;\r\n\r\n    sortName;\r\n\r\n    warnLen;\r\n\r\n    constructor(arrayVisualizer) {\r\n        // super(arrayVisualizer)\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.pseudoArray = this.arrayVisualizer.getPseudoArray()\r\n        this.state = this.arrayVisualizer.getState()\r\n        this.compare = this.arrayVisualizer.compare.bind(arrayVisualizer)\r\n        this.swap = this.arrayVisualizer.swap.bind(arrayVisualizer)\r\n        this.read = this.arrayVisualizer.read.bind(arrayVisualizer)\r\n        this.write = this.arrayVisualizer.write.bind(arrayVisualizer)\r\n        this.createAuxArray = this.arrayVisualizer.createAuxArray.bind(arrayVisualizer)\r\n        this.removeAuxArray = this.arrayVisualizer.removeAuxArray.bind(arrayVisualizer)\r\n        this.auxRead = this.arrayVisualizer.auxRead.bind(arrayVisualizer)\r\n        this.auxWrite = this.arrayVisualizer.auxWrite.bind(arrayVisualizer)\r\n        this.arrLength = this.arrayVisualizer.getArrLength();\r\n        this.sortName = \"\"\r\n        this.warnLen = -1;\r\n    }\r\n\r\n    getSortName(){\r\n        return this.sortName\r\n    }\r\n\r\n    getWarnLen(){\r\n        return this.warnLen\r\n    }\r\n\r\n    runSort(low, high, bucketsNum){\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"Controls_textCenter__3_8jn\",\"controls\":\"Controls_controls__3X5vt\",\"showToggleBtn\":\"Controls_showToggleBtn__2CbSs\",\"slider\":\"Controls_slider__3IxWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"ArrayWindow_arrayContainer__jfaB8\",\"bar\":\"ArrayWindow_bar__30QYB\"};","export class Sorts {\r\n    arrayVisualizer;\r\n    sortsPaths\r\n\r\n    constructor(arrayVisualizer) {\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.sortsPaths = [\"BubbleSort\", \"MergeSort\", \"LLQuickSort\", \"InsertionSort\", \"TimSort\", \"HeapSort\", \"SlowSort\", \"StoogeSort\"]\r\n    }\r\n    getSortsNames(){\r\n        return this.sortsPaths;\r\n    }\r\n    runSort(sortName, low, high, bucketsNum){\r\n        let Sort = require(\"./\"+sortName+\".js\")[sortName]\r\n        this.arrayVisualizer.sortClickEvent(Sort, low, high, bucketsNum)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__1qOnq\"};","var map = {\n\t\"./BubbleSort.js\": 24,\n\t\"./HeapSort.js\": 25,\n\t\"./InsertionSort.js\": 26,\n\t\"./LLQuickSort.js\": 27,\n\t\"./MergeSort.js\": 28,\n\t\"./SlowSort.js\": 29,\n\t\"./Sort.js\": 5,\n\t\"./Sorts.js\": 14,\n\t\"./StoogeSort.js\": 30,\n\t\"./TimSort.js\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","import {Sort} from \"./Sort\";\r\n\r\nexport class BubbleSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"BubbleSort\"\r\n    }\r\n    BubbleSort() {\r\n        let len = this.arrLength;\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                if (this.compare(j, j + 1, \">\")) {\r\n                    this.swap(j, j + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.BubbleSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class HeapSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"HeapSort\"\r\n    }\r\n    \r\n    heapify(n, i) {\r\n        let largest = i;\r\n\r\n        let l = 2 * i + 1;\r\n        let r = 2 * i + 2;\r\n\r\n        if (l < n && this.compare(l, largest, \">\")) {\r\n            largest = l;\r\n        }\r\n        if (r < n && this.compare(r, largest, \">\")) {\r\n            largest = r;\r\n        }\r\n\r\n        if (largest !== i) {\r\n            this.swap(i, largest);\r\n            this.heapify(n, largest);\r\n        }\r\n    }\r\n\r\n    HeapSort() {\r\n        let n = this.arrLength;\r\n\r\n\r\n        for (let i = Math.trunc(n / 2) - 1; i >= 0; i--) {\r\n            this.heapify(n, i);\r\n        }\r\n\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            this.swap(0, i);\r\n            this.heapify(i, 0)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.HeapSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class InsertionSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"InsertionSort\"\r\n    }\r\n\r\n    InsertionSort() {\r\n        let length = this.arrLength;\r\n        for (let i = 1; i < length; i++) {\r\n            let key = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= 0 && this.read(j) > key) {\r\n                this.write(j + 1, this.read(j))\r\n                j = j - 1;\r\n            }\r\n            this.write(j + 1, key)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.InsertionSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class LLQuickSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"LLQuickSort\"\r\n    }\r\n    partition(lo, hi) {\r\n        let pivot = hi;\r\n        let i = lo;\r\n        for (let j = lo; j < hi; j++) {\r\n            if (this.compare(j, pivot, \"<\")) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, hi);\r\n        return i;\r\n    }\r\n\r\n    LLQuickSort(lo, hi) {\r\n        if (lo < hi) {\r\n            let p = this.partition(lo, hi);\r\n            this.LLQuickSort(lo, p - 1);\r\n            this.LLQuickSort(p + 1, hi);\r\n        }\r\n    }\r\n    runSort(low, high) {\r\n        this.LLQuickSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class MergeSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"MergeSort\"\r\n    }\r\n    merge(low, mid, high) {\r\n        // let leftArray = new Array(mid - low + 1);\r\n        // let rightArray = new Array(high - mid);\r\n\r\n        let leftArrayLen = mid - low + 1\r\n        let rightArrayLen = high - mid\r\n\r\n        let leftArrayIndex = this.createAuxArray(leftArrayLen);\r\n        let rightArrayIndex = this.createAuxArray(rightArrayLen);\r\n\r\n        for (let i = 0; i < leftArrayLen; i++) {\r\n            // leftArray[i] = this.read(low + i)\r\n            this.auxWrite(i, this.read(low + i), leftArrayIndex)\r\n        }\r\n        for (let i = 0; i < rightArrayLen; i++) {\r\n            // rightArray[i] = this.read(mid + i + 1);\r\n            this.auxWrite(i, this.read(mid + i + 1), rightArrayIndex)\r\n        }\r\n\r\n        let leftIndex = 0;\r\n        let rightIndex = 0;\r\n\r\n        for (let i = low; i < high + 1; i++) {\r\n            if (leftIndex < leftArrayLen && rightIndex < rightArrayLen) {\r\n                // if (leftArray[leftIndex] < rightArray[rightIndex]) {\r\n                if (this.auxRead(leftIndex, leftArrayIndex) < this.auxRead(rightIndex, rightArrayIndex)) {\r\n                    this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                    leftIndex++;\r\n                } else {\r\n                    this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                    rightIndex++;\r\n                }\r\n            } else if (leftIndex < leftArrayLen) {\r\n                this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                leftIndex++;\r\n            } else if (rightIndex < rightArrayLen) {\r\n                this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                rightIndex++;\r\n            }\r\n        }\r\n        // console.log(leftArray)\r\n        // console.log(rightArray)\r\n        this.removeAuxArray(rightArrayIndex)\r\n        this.removeAuxArray(leftArrayIndex)\r\n    }\r\n\r\n    MergeSort(low, high) {\r\n        if (high <= low) return;\r\n\r\n        let mid = Math.trunc((low + high) / 2)\r\n        this.MergeSort(low, mid);\r\n        this.MergeSort(mid + 1, high);\r\n        this.merge(low, mid, high);\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.MergeSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class SlowSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"SlowSort\"\r\n        this.warnLen = 120\r\n    }\r\n\r\n    SlowSort(i, j) {\r\n        if (i >= j) {\r\n            return;\r\n        }\r\n        let m = Math.floor((i + j) / 2);\r\n        this.SlowSort(i, m);\r\n        this.SlowSort(m + 1, j);\r\n        if (this.compare(j, m, \"<\")) {\r\n            this.swap(j, m)\r\n        }\r\n        this.SlowSort(i, j - 1)\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.SlowSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class StoogeSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"StoogeSort\"\r\n    }\r\n\r\n    StoogeSort(i, j) {\r\n        if (this.compare(i, j, \">\")) {\r\n            this.swap(i, j)\r\n        }\r\n        if (j - i > 1) {\r\n            let t = Math.trunc((j - i + 1) / 3)\r\n            this.StoogeSort(i, j - t)\r\n            this.StoogeSort(i + t, j)\r\n            this.StoogeSort(i, j - t)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.StoogeSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class TimSort extends Sort {\r\n    MIN_MERGE\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"TimSort\"\r\n        this.MIN_MERGE = 32\r\n    }\r\n\r\n    minRunLength(n) {\r\n        let r = 0;\r\n        while (n >= this.MIN_MERGE)\r\n        {\r\n            r |= (n & 1);\r\n            n >>= 1;\r\n        }\r\n        return n + r;\r\n    }\r\n\r\n    insertionSort(left, right) {\r\n        for (let i = left + 1; i <= right; i++) {\r\n            let temp = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= left && this.read(j) > temp) {\r\n                this.write(j + 1, this.read(j))\r\n                j--;\r\n            }\r\n            this.write(j + 1, temp)\r\n        }\r\n    }\r\n\r\n    merge(l, m, r) {\r\n        let len1 = m - l + 1, len2 = r - m;\r\n        let left = this.createAuxArray(len1);\r\n        let right = this.createAuxArray(len2);\r\n        for(let x = 0; x < len1; x++)\r\n        {\r\n            // left[x] = arr[l + x];\r\n            this.auxWrite(x, this.read(l+x), left)\r\n        }\r\n        for(let x = 0; x < len2; x++)\r\n        {\r\n            // right[x] = arr[m + 1 + x];\r\n            this.auxWrite(x, this.read(m + 1 + x), right)\r\n        }\r\n\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = l;\r\n\r\n        while (i < len1 && j < len2)\r\n        {\r\n            // if (left[i] <= right[j])\r\n            if(this.auxRead(i, left) <= this.auxRead(j, right))\r\n            {\r\n                // arr[k] = left[i];\r\n                this.write(k, this.auxRead(i, left))\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                // arr[k] = right[j];\r\n                this.write(k, this.auxRead(j, right))\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n\r\n        while (i < len1) {\r\n            // arr[k] = left[i];\r\n            this.write(k, this.auxRead(i, left))\r\n            k++;\r\n            i++;\r\n        }\r\n\r\n        while (j < len2) {\r\n            this.write(k, this.auxRead(j, right))\r\n            k++;\r\n            j++;\r\n        }\r\n        this.removeAuxArray(right)\r\n        this.removeAuxArray(left)\r\n    }\r\n\r\n    timSort(n)\r\n    {\r\n        let minRun = this.minRunLength(this.MIN_MERGE);\r\n\r\n        for(let i = 0; i < n; i += minRun)\r\n        {\r\n            this.insertionSort(i, Math.min(\r\n                (i + this.MIN_MERGE - 1), (n - 1)));\r\n        }\r\n\r\n        for(let size = minRun; size < n; size = 2 * size) {\r\n            for(let left = 0; left < n; left += 2 * size) {\r\n                let mid = left + size - 1;\r\n                let right = Math.min((left + 2 * size - 1), (n - 1));\r\n                if(mid < right) {\r\n                    this.merge(left, mid, right);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.timSort(high+1)\r\n    }\r\n}","const types = {\r\n\r\n}\r\n\r\nconst colors = {\r\n\r\n}\r\n\r\nexport class Element{\r\n\r\n    value;\r\n    color;\r\n    type;\r\n\r\n    // constructor(args){\r\n    //     this.value = args.value;\r\n    //     this.type = args.type;\r\n    //     this.color = args.color || colors[args.type];\r\n    // }\r\n\r\n    constructor(value, type, color) {\r\n            this.value = value;\r\n            this.type = type;\r\n            this.color = color;\r\n    }\r\n\r\n    getValue(){\r\n        return this.value;\r\n    }\r\n    setValue(value){\r\n        this.value = value;\r\n    }\r\n\r\n    getColor(){\r\n        return this.color;\r\n    }\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    setType(type){\r\n        this.type = type;\r\n    }\r\n}","import {Element} from \"../classes/Element\";\r\nexport function random(a, b) {\r\n    return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInt(a, b) {\r\n    return Math.trunc(random(a, b))\r\n}\r\n\r\nexport function swapObj(json) {\r\n    let ret = {};\r\n    for (let key in json) {\r\n        ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function sleep(ms) {\r\n    ms += new Date().getTime();\r\n    while (new Date() < ms) {\r\n    }\r\n}\r\n\r\nexport function getAllMethods(toCheck) {\r\n    const props = [];\r\n    let obj = toCheck;\r\n    do {\r\n        props.push(...Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props.sort().filter((e, i, arr) => {\r\n        if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n    });\r\n}\r\n\r\nexport function deepArrayCopy(arr){\r\n    let out = [];\r\n    for(let i of arr){\r\n        let value = i.getValue();\r\n        let type = i.getType();\r\n        let color = i.getColor();\r\n        out.push(new Element(value, type, color))\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function arraysEquals(a, b){\r\n    return a.length === b.length &&\r\n    a.every((v, i) => v === b[i]);\r\n}","import React from 'react';\r\nimport styles from \"./ArrayWindow.module.scss\";\r\n\r\nexport function ArrayWindow(props){\r\n    let array = props.array\r\n    let mainArray = props.mainArray\r\n    let height = props.height\r\n    // let style = props.style\r\n    // console.log(array)\r\n    let arr = []\r\n\r\n    for (let i = 0; i < array.length; ++i) {\r\n        let styleSheet = {\r\n            height: array[i].getValue() / mainArray.length * 100 + \"%\",\r\n            backgroundColor: \"rgb(\" + array[i].getColor() + \")\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    for(let i = array.length;i < mainArray.length;++i){\r\n        let styleSheet = {\r\n            height: \"0%\",\r\n            backgroundColor: \"rgb(255,255,255)\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    if(array.length===0){\r\n        return <div/>\r\n    }\r\n    return (\r\n        <div style={{width: \"100%\", height: height+\"%\"}}>\r\n            <div className={styles.arrayContainer}>\r\n                {arr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Stats.module.scss\";\r\n\r\nexport function Stats(props){\r\n    return(\r\n        <div className={styles.statsContainer}>\r\n            <div><b>Sort: {props.sortName}</b></div>\r\n            <div>Length: {props.arrLength}</div>\r\n            {/*<div>Comparisons: {props.comparisons}</div>*/}\r\n            <div>Writes: {props.writes}</div>\r\n        </div>\r\n    )\r\n}","export let initFunctions = {\r\n    linear: function linear(x, length) {\r\n        return x;\r\n    },\r\n    reverse: function reverse(x, length) {\r\n        return length - x;\r\n    },\r\n    pipeOrgan: function pipeOrgan(x, length) {\r\n        if (x < length / 2) {\r\n            return 2 * x;\r\n        } else {\r\n            return 2 * (length - x) - 1;\r\n        }\r\n    },\r\n    inversedPipeOrgan: function inversedPipeOrgan(x, length){\r\n        if (x < length / 2) {\r\n            return (length - 2*x) - 1;\r\n        } else {\r\n            return x*2-length;\r\n        }\r\n    }\r\n}","import {randomInt} from \"./utils\";\r\n\r\nexport let shuffles = {\r\n    fullShuffle: function (len) {\r\n        let instructions = []\r\n        for (let i = 0; i < len; ++i) {\r\n            let randomIndex = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: i,\r\n                    b:randomIndex\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    },\r\n\r\n    almostSorted: function (len) {\r\n        let instructions = []\r\n        const amount = 0.1\r\n        for (let i = 0; i < len * amount; ++i) {\r\n            let randomIndexA = randomInt(i, len)\r\n            let randomIndexB = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: randomIndexA,\r\n                    b:randomIndexB\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport styles from \"./Controls.module.scss\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\nimport {getAllMethods} from \"../utils/utils\";\r\nimport {shuffles} from \"../utils/shuffles\";\r\n\r\n\r\nexport class Controls extends React.Component {\r\n    isControlShow\r\n    arrayVisualizer\r\n    sorts\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isControlShow = true;\r\n        this.arrayVisualizer = props.arrayVisualizer\r\n        this.sorts = props.sorts\r\n        this.arrayVisualizer.updateArrLength(100)\r\n        this.arrayVisualizer.initArray(initFunctions.linear)\r\n    }\r\n\r\n    updateArrLength() {\r\n        let slider = document.getElementById(styles.slider)\r\n\r\n        if (slider !== null) {\r\n            let len = slider.value\r\n            this.arrayVisualizer.updateArrLength(len)\r\n        }\r\n    }\r\n\r\n    toggleControlShow() {\r\n        // console.log(styles.controls)\r\n        let controlsContainer = document.getElementById(styles.controlsContainer)\r\n        let controls = document.getElementById(styles.controls)\r\n        let btn = document.getElementById(styles.showToggleBtn)\r\n        if (this.isControlShow) {\r\n            controls.style.display = \"none\"\r\n            controlsContainer.style.width = \"0\"\r\n            btn.innerHTML = \"&gt;&gt;\";\r\n        } else {\r\n            controls.style.display = \"block\"\r\n            controlsContainer.style.width = \"20rem\"\r\n            btn.innerHTML = \"&lt;&lt\";\r\n        }\r\n        this.isControlShow = !this.isControlShow\r\n    }\r\n\r\n    initArray(func){\r\n        this.arrayVisualizer.initArray(func, this.arrayVisualizer.arrLength, true)\r\n    }\r\n\r\n    shuffleArray(func){\r\n        this.arrayVisualizer.shuffleArray(func)\r\n    }\r\n\r\n    sortArray(sortName){\r\n        this.sorts.runSort(sortName, 0, this.arrayVisualizer.getArrLength()-1, 10)\r\n    }\r\n\r\n    stopSort(){\r\n        this.arrayVisualizer.stopSort()\r\n    }\r\n\r\n    abortSort(){\r\n        this.stopSort()\r\n        this.initArray(initFunctions.linear)\r\n    }\r\n\r\n    genInitFunctions(){\r\n        // console.log(initFunctions)\r\n        let tmp = []\r\n        for (let i in initFunctions) {\r\n            tmp.push(\r\n                <button key={i} onClick={this.initArray.bind(this, initFunctions[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getSorts(){\r\n        let tmp = []\r\n        let sortsNames = this.sorts.getSortsNames()\r\n        for (let i of sortsNames) {\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortArray.bind(this, i)}>{i}</button>)\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getShuffles(){\r\n        let tmp = []\r\n        for(let i in shuffles){\r\n            tmp.push(\r\n                <button key={i} onClick={this.shuffleArray.bind(this, shuffles[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    toggleShowAuxArrays(){\r\n        let element = document.getElementById(\"auxArrShowCB\")\r\n        this.arrayVisualizer.setShowAuxArrays(element.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={styles.controlsContainer}>\r\n                {/*<div onClick={this.toggleControlShow.bind(this)} id={styles.showToggleBtn}>&lt;&lt;</div>*/}\r\n                <div id={styles.controls}>\r\n                    <div>\r\n                        <div className={styles.textCenter}>Array Size</div>\r\n                        <input id={styles.slider} type=\"range\" min=\"10\" max=\"300\" defaultValue={this.arrLength}\r\n                               step=\"10\"\r\n                               onChange={this.updateArrLength.bind(this)}/>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Visuals</div>\r\n                            <div>\r\n                                <input onChange={this.toggleShowAuxArrays.bind(this)} type=\"checkbox\" id=\"auxArrShowCB\" name=\"auxArrShowCB\" defaultChecked={true}/>\r\n                                    <label htmlFor=\"auxArrShowCB\">Show Aux Arrays</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Init Array</div>\r\n                            <div>{this.genInitFunctions()}</div>\r\n                        </div>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Shuffle Array</div>\r\n                            <div>\r\n                                {/*<button onClick={this.shuffleArray.bind(this)}>Random</button>*/}\r\n                                <div>{this.getShuffles()}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort control</div>\r\n                            <div>\r\n                                <button onClick={this.abortSort.bind(this)}>Abort Sort(Recommended)</button>\r\n                                <button onClick={this.stopSort.bind(this)}>Stop Sort(Not Recommended)</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort Array</div>\r\n                            <div>\r\n                                {this.getSorts()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {arraysEquals, deepArrayCopy, getAllMethods, randomInt} from \"../utils/utils\";\r\nimport {Sorts} from \"../Sorts/Sorts\"\r\nimport {ArrayWindow} from \"../ArrayWindow/ArrayWindow\";\r\nimport {Element} from \"../classes/Element\";\r\nimport {Stats} from \"../Stats/Stats\";\r\nimport {Controls} from \"../Controls/Controls\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\n\r\nconst colors = {\r\n    \"Unmarked\": [255, 255, 255],\r\n    \"Default\": [255, 0, 0],\r\n    \"Additional\": [randomInt(0, 256), randomInt(0, 256), randomInt(0, 256)],\r\n    \"Sorted\": [0, 255, 0],\r\n    \"Analysis\": [0, 0, 255]\r\n}\r\n\r\nexport class ArrayVisualizer extends React.Component {\r\n    delays;\r\n    delayInc;\r\n    pseudoArray;\r\n    pseudoAuxArrays;\r\n    arrLength\r\n    ctx\r\n    timeoutArray\r\n    sorts\r\n    delayIncConst\r\n    showAuxArrays\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.arrLength = 100\r\n        this.state = {\r\n            array: this.initArray(initFunctions.linear, this.arrLength),\r\n            sortName: \"\",\r\n            comparisons: 0,\r\n            writes: 0,\r\n            auxArrays: []\r\n        }\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        this.delayIncConst = 3000\r\n        this.instructions = [];\r\n        this.timeoutArray = [];\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.pseudoAuxArrays = []\r\n        this.sorts = new Sorts(this);\r\n        this.arrLength = this.state.length\r\n        this.delayInc = this.delayIncConst/this.arrLength;\r\n        this.showAuxArrays = true\r\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        // this.updateArrLength(this.arrLength);\r\n    }\r\n\r\n    playSound(value) {\r\n        let osc = this.ctx.createOscillator();\r\n        osc.type = 'sine';\r\n\r\n        let k = value / this.arrLength\r\n        osc.frequency.value = 2000 * k + 200;\r\n\r\n\r\n        let addTime = 50\r\n\r\n        let gainNode = this.ctx.createGain()\r\n        gainNode.gain.value = 0;\r\n        osc.connect(gainNode)\r\n        gainNode.connect(this.ctx.destination)\r\n\r\n        gainNode.gain.linearRampToValueAtTime(0.05, this.ctx.currentTime + (this.delayInc + addTime) / 1000 / 2)\r\n        gainNode.gain.linearRampToValueAtTime(0, this.ctx.currentTime + (this.delayInc + addTime) / 1000)\r\n\r\n        osc.start();\r\n        osc.stop(this.ctx.currentTime + (this.delayInc + addTime) / 1000);\r\n\r\n    }\r\n    resetDelay() {\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        for(let i of this.timeoutArray){\r\n            clearTimeout(i);\r\n        }\r\n        this.timeoutArray = []\r\n    }\r\n\r\n    nullify() {\r\n        this.resetDelay()\r\n        this.setState(\r\n            {\r\n                comparisons: 0,\r\n                writes: 0\r\n            }\r\n        )\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.writes = 0;\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.comparisons = 0;\r\n    }\r\n\r\n    mark(index, args, saveArr = true) {\r\n        let type = \"Default\"\r\n        let color = colors[\"Default\"]\r\n        let tmpArr = this.state.array\r\n        // Additional\r\n        if (args.type === \"Additional\") {\r\n            type = \"Additional\"\r\n            color = args.color\r\n            // console.log(color)\r\n        }\r\n        //Default\r\n        else if (!args.type || args.type === \"Default\") {\r\n            type = \"Default\"\r\n            color = colors[\"Default\"]\r\n        } else {\r\n            type = args.type\r\n            color = args.color\r\n        }\r\n\r\n        tmpArr[index].setType(type)\r\n        tmpArr[index].setColor(color)\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n        // console.log(color);\r\n    }\r\n\r\n    markMany(indexes, args, saveArr) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.mark(i, args, saveArr)\r\n            } else {\r\n                tmpArr = this.mark(i, args, saveArr)\r\n            }\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmark(index, saveArr = true) {\r\n        let tmpArr = this.state.array\r\n        tmpArr[index].setColor(colors[\"Unmarked\"])\r\n        tmpArr[index].setType(\"Unmarked\")\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmarkMany(indexes, saveArr, saveOnce) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.unmark(i, saveArr)\r\n            } else {\r\n                tmpArr = this.unmark(i, saveArr)\r\n            }\r\n        }\r\n        if (saveOnce) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n\r\n    markUnmarkMany(markIndexes, markArgs) {\r\n        this.markMany(markIndexes, markArgs, true)\r\n        this.timeoutArray.push(setTimeout(this.unmarkMany.bind(this), this.delays.Unmark += this.delayInc / 100, markIndexes, false, true))\r\n    }\r\n\r\n    swapWithDelay(a, b, arr = this.pseudoArray, mark, delay = this.delayInc, playSound) {\r\n        this.timeoutArray.push(setTimeout(this.swapInArr.bind(this), this.delays.Swap += delay, a, b, arr, mark, playSound))\r\n    }\r\n\r\n\r\n    swapInArr(a, b, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        if(playSound) {\r\n            this.playSound(arr[b].getValue());\r\n        }\r\n        let tmpArr = arr\r\n        // console.log(\"SWAPPING:\" + tmpArr[a].getValue()+\"<->\"+tmpArr[b].getValue())\r\n        let tmp = tmpArr[a]\r\n        tmpArr[a] = tmpArr[b]\r\n        tmpArr[b] = tmp\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 2\r\n        })\r\n    }\r\n\r\n    swap(a, b, arr = this.pseudoArray) {\r\n        this.swapInArr(a, b, arr, false, false)\r\n        // console.log(getVarName(this.state.array.name))\r\n        this.instructions.push(\r\n        {\r\n            cmd: \"swap\",\r\n            arr: arr,\r\n            a: a,\r\n            b: b\r\n        }\r\n        )\r\n        // this.swapWithDelay(a, b, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    writeInArr(index, value, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        // console.log(\"WRITING IN \")\r\n        // console.log(this.getNameByArray(arr))\r\n        // console.log(\"INDEX: \"+index)\r\n        // console.log(\"VALUE: \"+value)\r\n        if(playSound) {\r\n            this.playSound(value)\r\n        }\r\n        arr[index].setValue(value)\r\n        if (mark) {\r\n            this.markUnmarkMany([index], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 1\r\n        })\r\n    }\r\n\r\n    writeWithDelay(index, value, arr = this.pseudoArray, mark, delay = this.delayInc, playSound = true) {\r\n        this.timeoutArray.push(setTimeout(this.writeInArr.bind(this), this.delays.Write += delay, index, value, arr, mark, playSound))\r\n    }\r\n\r\n    write(index, value, arr = this.pseudoArray) {\r\n        this.writeInArr(index, value, arr, false, false)\r\n        this.instructions.push(\r\n            {\r\n                cmd: \"write\",\r\n                arr: arr,\r\n                index: index,\r\n                value: value\r\n            }\r\n        )\r\n        // this.writeWithDelay(index, value, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    read(index, arr = this.pseudoArray) {\r\n        // this.markUnmarkMany([index], {type: \"Default\"})\r\n        this.instructions.push(\r\n            {\r\n             cmd: \"read\",\r\n             arr: arr,\r\n             index: index\r\n            }\r\n        )\r\n        return arr[index].getValue()\r\n    }\r\n\r\n    compare(a, b, sign = \"<\", arr = this.pseudoArray) {\r\n        // this.compMainArrWithDelay(a, b, false)\r\n        if (sign === \"<\") {\r\n            return arr[a].getValue() < arr[b].getValue()\r\n        } else if (sign === \"<=\") {\r\n            return arr[a].getValue() <= arr[b].getValue()\r\n        } else if (sign === \">\") {\r\n            return arr[a].getValue() > arr[b].getValue()\r\n        } else if (sign === \">=\") {\r\n            return arr[a].getValue() >= arr[b].getValue()\r\n        } else {\r\n            return arr[a].getValue() === arr[b].getValue()\r\n        }\r\n    }\r\n\r\n    compMainArr(a, b, mark = false) {\r\n        let curComparisons = this.state.comparisons;\r\n        this.setState({\r\n            comparisons: curComparisons + 1\r\n        })\r\n        console.log(\"Comparisons: \" + this.state.comparisons + \" \" + a + \" \" + b)\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Additional\", color: [0, 0, 255]})\r\n        }\r\n    }\r\n\r\n    compMainArrWithDelay(a, b, mark = false) {\r\n        // setTimeout(this.compMainArr.bind(this), this.delays.Comp += this.delayInc, a, b, mark)\r\n    }\r\n\r\n    createAuxArray(len, isPseudo = true){\r\n        if(isPseudo) {\r\n            let auxArrIndex = this.pseudoAuxArrays.length\r\n            this.pseudoAuxArrays.push(this.initArray(() => 0, len, false))\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"createAuxArray\",\r\n                    len: len\r\n                }\r\n            )\r\n            return auxArrIndex\r\n        }else{\r\n            let tmpArr = this.state.auxArrays\r\n            tmpArr.push(this.initArray(() => 0, len, false))\r\n            this.setState({\r\n                auxArrays: tmpArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    createAuxArrayWithDelay(len, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.createAuxArray.bind(this), this.delays.Write += delay, len, isPseudo))\r\n    }\r\n\r\n    removeAuxArray(index, isPseudo = true){\r\n        if(isPseudo) {\r\n            this.pseudoAuxArrays.splice(index, 1)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"removeAuxArray\",\r\n                    index: index\r\n                }\r\n            )\r\n        }else{\r\n            let tmp = this.state.auxArrays\r\n            tmp.splice(index, 1)\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n            // this.state.auxArrays.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    removeAuxArrayWithDelay(index, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.removeAuxArray.bind(this), this.delays.Write += delay, index, isPseudo))\r\n    }\r\n\r\n    auxRead(index, arrIndex, isPseudo = true){\r\n        if(isPseudo){\r\n            return this.pseudoAuxArrays[arrIndex][index].getValue()\r\n        }else {\r\n            return this.state.auxArrays[arrIndex][index].getValue()\r\n        }\r\n    }\r\n\r\n    auxWrite(index, value, arrIndex, isPseudo = true, playSound = false){\r\n        if(playSound){\r\n            this.playSound(value)\r\n        }\r\n        if(isPseudo){\r\n            this.pseudoAuxArrays[arrIndex][index].setValue(value)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"auxWrite\",\r\n                    index: index,\r\n                    value: value,\r\n                    arrIndex: arrIndex\r\n                }\r\n            )\r\n        }else{\r\n            this.state.auxArrays[arrIndex][index].setValue(value)\r\n            let tmp = this.state.auxArrays\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n        }\r\n    }\r\n\r\n    auxWriteWithDelay(index, value, arrIndex, delay, isPseudo = false, playSound = true, ){\r\n        this.timeoutArray.push(setTimeout(this.auxWrite.bind(this), this.delays.Write += delay, index, value, arrIndex, isPseudo, playSound))\r\n    }\r\n\r\n    getNameByArray(arr){\r\n        // console.log(arr)\r\n        if(arraysEquals(arr, this.state.array)){\r\n            return {name:\"mainArray\"}\r\n        }\r\n        if(arraysEquals(arr, this.pseudoArray)){\r\n            return {name:\"pseudoArray\"}\r\n        }\r\n        for(let i = 0; i < this.pseudoAuxArrays.length;++i){\r\n            if (arraysEquals(arr, this.pseudoAuxArrays[i])){\r\n                return {name:\"pseudoAuxArray\", index:i}\r\n            }\r\n        }\r\n        for(let i = 0; i < this.state.auxArrays.length;++i){\r\n            if (arraysEquals(arr, this.state.auxArrays[i])){\r\n                return {name:\"auxArray\", index:i}\r\n            }\r\n        }\r\n        return \"NotFound\"\r\n    }\r\n\r\n    getArrayByName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if (name===\"mainArray\"){\r\n            return this.state.array\r\n        }\r\n        if(name===\"pseudoArray\"){\r\n            return this.pseudoArray\r\n        }\r\n        if(name===\"auxArray\"){\r\n            console.log(args)\r\n            return this.state.auxArrays[index]\r\n        }\r\n        if(name===\"pseudoAuxArray\"){\r\n            console.log(args)\r\n            return this.pseudoAuxArrays[index]\r\n        }\r\n        return []\r\n    }\r\n\r\n    inverseArrayName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if(name===\"pseudoArray\") {\r\n            return {name:\"mainArray\"}\r\n        }else if(name===\"pseudoAuxArray\"){\r\n            return {name: \"auxArray\", index: index}\r\n        }\r\n        return args\r\n    }\r\n\r\n\r\n    getArrayVisualizer() {\r\n        return this;\r\n    }\r\n\r\n    getPseudoArray() {\r\n        return this.pseudoArray;\r\n    }\r\n\r\n    getState(){\r\n        return this.state\r\n    }\r\n\r\n    getArrLength(){\r\n        return this.arrLength;\r\n    }\r\n\r\n    setShowAuxArrays(val){\r\n        this.showAuxArrays = val\r\n    }\r\n\r\n    stopSort(){\r\n        this.resetDelay()\r\n        this.unmarkMany(Array.from(Array(this.arrLength).keys()), false, true)\r\n        this.setState({\r\n                auxArrays: []\r\n            }\r\n        )\r\n    }\r\n\r\n    initArray(func, length, setToState=false) {\r\n        let arr = []\r\n        for (let i = 0; i < length; ++i) {\r\n            let element = new Element(func(i, length), 0, [255, 255, 255])\r\n            arr.push(element)\r\n        }\r\n        if(setToState){\r\n            this.setState({\r\n                array: arr\r\n            })\r\n        }else {\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    shuffleArray(func) {\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: \"Shuffle\"\r\n        })\r\n\r\n        let instructions = func(this.arrLength);\r\n        for(let i of instructions){\r\n            if(i.cmd === \"swap\"){\r\n                setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i.a, i.b, this.state.array, true, true)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    shuffleClickEvent() {\r\n        this.shuffleArray()\r\n    }\r\n\r\n    setSortName(sortName){\r\n        this.setState({\r\n            sortName: sortName\r\n        })\r\n    }\r\n\r\n    sortClickEvent(Sort, low, high, bucketsNum) {\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.nullify()\r\n\r\n        // let sortBind = sort.bind(this.sorts, 0, this.arrLength - 1)\r\n        // sortBind()\r\n        // console.log(sort)\r\n        let sort = new Sort(this)\r\n\r\n        this.setState({\r\n            sortName: sort.getSortName()\r\n        })\r\n\r\n        let warnLen = sort.getWarnLen()\r\n        if(warnLen!==-1 && this.arrLength > warnLen && !window.confirm(\"WARNING!!!\\nThe array size(\"+this.arrLength+\") \" +\r\n            \"more than recommended(\"+warnLen+\")\\nApplication may freeze\\nDo you want continue?\")){\r\n            return\r\n        }\r\n\r\n        sort.runSort(low, high, bucketsNum)\r\n\r\n        console.log(\"SORTED ARRAY:\")\r\n        console.log(this.pseudoArray)\r\n\r\n        console.log(\"START INTERPRETATION!!\")\r\n        for(let i of this.instructions){\r\n            let cmd = i.cmd\r\n            if([\"swap\", \"read\", \"write\"].includes(cmd)) {\r\n                let arrName = this.getNameByArray(i.arr)\r\n                let arrNameInv = this.inverseArrayName(arrName)\r\n                let arr = this.getArrayByName(arrNameInv)\r\n                // console.log(arrName)\r\n                if (cmd === \"swap\") {\r\n                    this.swapWithDelay(i.a, i.b, arr, true, this.delayInc, true)\r\n                } else if (cmd === \"write\") {\r\n                    // console.log(arrName)\r\n                    // console.log(\"WRITE FROM INTERPRETER!\")\r\n                    // console.log(arr)\r\n                    // console.log(this.getNameByArray(arr))\r\n                    this.writeWithDelay(i.index, i.value, arr, true, this.delayInc, true)\r\n                } else {}\r\n            }\r\n            if(cmd===\"auxWrite\"){\r\n                this.auxWriteWithDelay(i.index, i.value, i.arrIndex, this.delayInc, false, true)\r\n            }\r\n            if(cmd===\"createAuxArray\"){\r\n                this.createAuxArrayWithDelay(i.len, this.delayInc, false)\r\n            }\r\n            if(cmd===\"removeAuxArray\"){\r\n                this.removeAuxArrayWithDelay(i.index, this.delayInc, false)\r\n            }\r\n        }\r\n        this.pseudoAuxArrays = []\r\n        this.instructions = []\r\n    }\r\n\r\n\r\n    updateDelayInc(val){\r\n        this.delayInc = val/this.arrLength;\r\n    }\r\n\r\n    updateArrLength(len){\r\n        this.arrLength = len\r\n        this.setState({\r\n            array: this.initArray(initFunctions.linear, this.arrLength)\r\n        })\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n\r\n        this.sorts.arrLength = this.getArrLength()\r\n        this.updateDelayInc(this.delayIncConst)\r\n    }\r\n\r\n    genArrayWindows(){\r\n        let tmp = []\r\n        if(this.showAuxArrays) {\r\n            for (let i = this.state.auxArrays.length - 1; i >= 0; i--) {\r\n                tmp.push(\r\n                    <ArrayWindow key={this.state.auxArrays.length - i} array={this.state.auxArrays[i]}\r\n                                 mainArray={this.state.array} height={100 / (1 + this.state.auxArrays.length)}/>\r\n                )\r\n            }\r\n        }\r\n        return tmp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stats sortName={this.state.sortName} comparisons={this.state.comparisons} writes={this.state.writes} arrLength={this.arrLength}/>\r\n                <div style={{height: \"100vh\"}}>\r\n                {/*<div>*/}\r\n                    {this.genArrayWindows()}\r\n                    <ArrayWindow array={this.state.array} mainArray={this.state.array} height={this.showAuxArrays ? 100/(1+this.state.auxArrays.length) : 100}/>\r\n                </div>\r\n                <div>\r\n                    <Controls arrayVisualizer={this} sorts={this.sorts}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {ArrayVisualizer} from \"./components/ArrayVisualizer/ArrayVisualizer\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ArrayVisualizer></ArrayVisualizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}