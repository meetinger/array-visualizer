{"version":3,"sources":["components/Controls/Controls.module.scss","components/ArrayWindow/ArrayWindow.module.scss","components/Stats/Stats.module.scss","components/classes/Element.js","components/utils/utils.js","components/Sorts/Sorts.js","components/ArrayWindow/ArrayWindow.js","components/Stats/Stats.js","components/utils/initFunctions.js","components/utils/shuffles.js","components/Controls/Controls.js","components/ArrayVisualizer/ArrayVisualizer.js","reportWebVitals.js","index.js"],"names":["module","exports","Element","value","type","color","this","randomInt","a","b","Math","trunc","random","deepArrayCopy","arr","out","i","getValue","getType","getColor","push","arraysEquals","length","every","v","Sorts","arrayVisualizer","pseudoArray","getPseudoArray","state","getState","compare","bind","swap","read","write","createAuxArray","removeAuxArray","auxRead","auxWrite","arrLength","getArrLength","lo","hi","pivot","j","p","LLQuickPartition","LLQuickSort","len","m","floor","SlowSort","low","mid","high","leftArrayLen","rightArrayLen","leftArrayIndex","rightArrayIndex","leftIndex","rightIndex","MergeSort","classicMerge","n","largest","l","r","heapify","key","console","log","t","StoogeSort","ArrayWindow","props","array","mainArray","height","styleSheet","backgroundColor","style","className","styles","bar","width","arrayContainer","Stats","statsContainer","sortName","writes","initFunctions","linear","x","reverse","pipeOrgan","inversedPipeOrgan","shuffles","fullShuffle","instructions","randomIndex","cmd","almostSorted","randomIndexA","randomIndexB","Controls","isControlShow","sorts","updateArrLength","initArray","slider","document","getElementById","controlsContainer","controls","btn","showToggleBtn","display","innerHTML","func","shuffleArray","sort","sortClickEvent","stopSort","tmp","onClick","methods","toCheck","obj","Object","getOwnPropertyNames","getPrototypeOf","filter","e","getAllMethods","includes","sortArray","element","setShowAuxArrays","checked","id","textCenter","min","max","defaultValue","step","onChange","toggleShowAuxArrays","name","defaultChecked","htmlFor","genInitFunctions","getShuffles","abortSort","getSorts","React","Component","colors","ArrayVisualizer","comparisons","auxArrays","delays","Swap","Write","Comp","Unmark","CreateAuxArray","RemoveAuxArray","delayIncConst","timeoutArray","pseudoAuxArrays","delayInc","showAuxArrays","ctx","window","AudioContext","webkitAudioContext","osc","createOscillator","k","frequency","gainNode","createGain","gain","connect","destination","linearRampToValueAtTime","currentTime","start","stop","clearTimeout","resetDelay","setState","index","args","saveArr","tmpArr","setType","setColor","indexes","mark","saveOnce","unmark","markIndexes","markArgs","markMany","setTimeout","unmarkMany","delay","playSound","swapInArr","markUnmarkMany","curWrites","setValue","writeInArr","sign","curComparisons","isPseudo","auxArrIndex","splice","arrIndex","val","Array","from","keys","setToState","nullify","sortBind","arrName","getNameByArray","arrNameInv","inverseArrayName","getArrayByName","swapWithDelay","writeWithDelay","auxWriteWithDelay","createAuxArrayWithDelay","removeAuxArrayWithDelay","updateDelayInc","genArrayWindows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.bd032762.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"Controls_textCenter__3_8jn\",\"controls\":\"Controls_controls__3X5vt\",\"showToggleBtn\":\"Controls_showToggleBtn__2CbSs\",\"slider\":\"Controls_slider__3IxWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"ArrayWindow_arrayContainer__jfaB8\",\"bar\":\"ArrayWindow_bar__30QYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__1qOnq\"};","const types = {\r\n\r\n}\r\n\r\nconst colors = {\r\n\r\n}\r\n\r\nexport class Element{\r\n\r\n    value;\r\n    color;\r\n    type;\r\n\r\n    // constructor(args){\r\n    //     this.value = args.value;\r\n    //     this.type = args.type;\r\n    //     this.color = args.color || colors[args.type];\r\n    // }\r\n\r\n    constructor(value, type, color) {\r\n            this.value = value;\r\n            this.type = type;\r\n            this.color = color;\r\n    }\r\n\r\n    getValue(){\r\n        return this.value;\r\n    }\r\n    setValue(value){\r\n        this.value = value;\r\n    }\r\n\r\n    getColor(){\r\n        return this.color;\r\n    }\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    setType(type){\r\n        this.type = type;\r\n    }\r\n}","import {Element} from \"../classes/Element\";\r\nexport function random(a, b) {\r\n    return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInt(a, b) {\r\n    return Math.trunc(random(a, b))\r\n}\r\n\r\nexport function swapObj(json) {\r\n    let ret = {};\r\n    for (let key in json) {\r\n        ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function sleep(ms) {\r\n    ms += new Date().getTime();\r\n    while (new Date() < ms) {\r\n    }\r\n}\r\n\r\nexport function getAllMethods(toCheck) {\r\n    const props = [];\r\n    let obj = toCheck;\r\n    do {\r\n        props.push(...Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props.sort().filter((e, i, arr) => {\r\n        if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n    });\r\n}\r\n\r\nexport function deepArrayCopy(arr){\r\n    let out = [];\r\n    for(let i of arr){\r\n        let value = i.getValue();\r\n        let type = i.getType();\r\n        let color = i.getColor();\r\n        out.push(new Element(value, type, color))\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function arraysEquals(a, b){\r\n    return a.length === b.length &&\r\n    a.every((v, i) => v === b[i]);\r\n}","export class Sorts {\r\n    arrayVisualizer;\r\n    array;\r\n    pseudoArray;\r\n\r\n    compare;\r\n    swap;\r\n    write;\r\n    read;\r\n\r\n    createAuxArray\r\n    removeAuxArray\r\n\r\n    auxRead\r\n    auxWrite\r\n\r\n    arrLength;\r\n\r\n\r\n\r\n    constructor(arrayVisualizer) {\r\n        // super(arrayVisualizer)\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.pseudoArray = this.arrayVisualizer.getPseudoArray()\r\n        this.state = this.arrayVisualizer.getState()\r\n        this.compare = this.arrayVisualizer.compare.bind(arrayVisualizer)\r\n        this.swap = this.arrayVisualizer.swap.bind(arrayVisualizer)\r\n        this.read = this.arrayVisualizer.read.bind(arrayVisualizer)\r\n        this.write = this.arrayVisualizer.write.bind(arrayVisualizer)\r\n        this.createAuxArray = this.arrayVisualizer.createAuxArray.bind(arrayVisualizer)\r\n        this.removeAuxArray = this.arrayVisualizer.removeAuxArray.bind(arrayVisualizer)\r\n        this.auxRead = this.arrayVisualizer.auxRead.bind(arrayVisualizer)\r\n        this.auxWrite = this.arrayVisualizer.auxWrite.bind(arrayVisualizer)\r\n        this.arrLength = this.arrayVisualizer.getArrLength();\r\n    }\r\n\r\n    LLQuickPartition(lo, hi) {\r\n        let pivot = hi;\r\n        let i = lo;\r\n        for (let j = lo; j < hi; j++) {\r\n            if (this.compare(j, pivot, \"<\")) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, hi);\r\n        return i;\r\n    }\r\n\r\n    LLQuickSort(lo, hi) {\r\n        if (lo < hi) {\r\n            let p = this.LLQuickPartition(lo, hi);\r\n            this.LLQuickSort(lo, p - 1);\r\n            this.LLQuickSort(p + 1, hi);\r\n        }\r\n    }\r\n\r\n    BubbleSort() {\r\n        let len = this.arrLength;\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                if (this.compare(j, j + 1, \">\")) {\r\n                    this.swap(j, j + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    SlowSort(i, j) {\r\n        if (i >= j) {\r\n            return;\r\n        }\r\n        let m = Math.floor((i + j) / 2);\r\n        this.SlowSort(i, m);\r\n        this.SlowSort(m + 1, j);\r\n        if (this.compare(j, m, \"<\")) {\r\n            this.swap(j, m)\r\n        }\r\n        this.SlowSort(i, j - 1)\r\n    }\r\n\r\n    classicMerge(low, mid, high) {\r\n        // let leftArray = new Array(mid - low + 1);\r\n        // let rightArray = new Array(high - mid);\r\n\r\n        let leftArrayLen = mid - low + 1\r\n        let rightArrayLen = high - mid\r\n\r\n        let leftArrayIndex = this.createAuxArray(leftArrayLen);\r\n        let rightArrayIndex = this.createAuxArray(rightArrayLen);\r\n\r\n        for (let i = 0; i < leftArrayLen; i++) {\r\n            // leftArray[i] = this.read(low + i)\r\n            this.auxWrite(i, this.read(low + i), leftArrayIndex)\r\n        }\r\n        for (let i = 0; i < rightArrayLen; i++) {\r\n            // rightArray[i] = this.read(mid + i + 1);\r\n            this.auxWrite(i, this.read(mid + i + 1), rightArrayIndex)\r\n        }\r\n\r\n        let leftIndex = 0;\r\n        let rightIndex = 0;\r\n\r\n        for (let i = low; i < high + 1; i++) {\r\n            if (leftIndex < leftArrayLen && rightIndex < rightArrayLen) {\r\n                // if (leftArray[leftIndex] < rightArray[rightIndex]) {\r\n                if (this.auxRead(leftIndex, leftArrayIndex) < this.auxRead(rightIndex, rightArrayIndex)) {\r\n                    this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                    leftIndex++;\r\n                } else {\r\n                    this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                    rightIndex++;\r\n                }\r\n            } else if (leftIndex < leftArrayLen) {\r\n                this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                leftIndex++;\r\n            } else if (rightIndex < rightArrayLen) {\r\n                this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                rightIndex++;\r\n            }\r\n        }\r\n        // console.log(leftArray)\r\n        // console.log(rightArray)\r\n        this.removeAuxArray(rightArrayIndex)\r\n        this.removeAuxArray(leftArrayIndex)\r\n    }\r\n\r\n    MergeSort(low, high) {\r\n        if (high <= low) return;\r\n\r\n        let mid = Math.trunc((low + high) / 2)\r\n        this.MergeSort(low, mid);\r\n        this.MergeSort(mid + 1, high);\r\n        this.classicMerge(low, mid, high);\r\n    }\r\n\r\n    heapify(n, i) {\r\n        let largest = i;\r\n\r\n        let l = 2 * i + 1;\r\n        let r = 2 * i + 2;\r\n\r\n        if (l < n && this.compare(l, largest, \">\")) {\r\n            largest = l;\r\n        }\r\n        if (r < n && this.compare(r, largest, \">\")) {\r\n            largest = r;\r\n        }\r\n\r\n        if (largest !== i) {\r\n            this.swap(i, largest);\r\n            this.heapify(n, largest);\r\n        }\r\n    }\r\n\r\n    HeapSort() {\r\n        let n = this.arrLength;\r\n\r\n\r\n        for (let i = Math.trunc(n / 2) - 1; i >= 0; i--) {\r\n            this.heapify(n, i);\r\n        }\r\n\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            this.swap(0, i);\r\n            this.heapify(i, 0)\r\n        }\r\n    }\r\n\r\n    InsertionSort() {\r\n        let length = this.arrLength;\r\n        for (let i = 1; i < length; i++) {\r\n            let key = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= 0 && this.read(j) > key) {\r\n                this.write(j + 1, this.read(j))\r\n                j = j - 1;\r\n            }\r\n            this.write(j + 1, key)\r\n        }\r\n    }\r\n\r\n    StoogeSort(i, j) {\r\n        console.log(i)\r\n        console.log(j)\r\n        if (this.compare(i, j, \">\")) {\r\n            this.swap(i, j)\r\n        }\r\n        if (j - i > 1) {\r\n            let t = Math.trunc((j - i + 1) / 3)\r\n            this.StoogeSort(i, j - t)\r\n            this.StoogeSort(i + t, j)\r\n            this.StoogeSort(i, j - t)\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport styles from \"./ArrayWindow.module.scss\";\r\n\r\nexport function ArrayWindow(props){\r\n    let array = props.array\r\n    let mainArray = props.mainArray\r\n    let height = props.height\r\n    // let style = props.style\r\n    // console.log(array)\r\n    let arr = []\r\n\r\n    for (let i = 0; i < array.length; ++i) {\r\n        let styleSheet = {\r\n            height: array[i].getValue() / mainArray.length * 100 + \"%\",\r\n            backgroundColor: \"rgb(\" + array[i].getColor() + \")\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    for(let i = array.length;i < mainArray.length;++i){\r\n        let styleSheet = {\r\n            height: \"0%\",\r\n            backgroundColor: \"rgb(255,255,255)\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    if(array.length===0){\r\n        return <div/>\r\n    }\r\n    return (\r\n        <div style={{width: \"100%\", height: height+\"%\"}}>\r\n            <div className={styles.arrayContainer}>\r\n                {arr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Stats.module.scss\";\r\n\r\nexport function Stats(props){\r\n    return(\r\n        <div className={styles.statsContainer}>\r\n            <div><b>Sort: {props.sortName}</b></div>\r\n            <div>Length: {props.arrLength}</div>\r\n            {/*<div>Comparisons: {props.comparisons}</div>*/}\r\n            <div>Writes: {props.writes}</div>\r\n        </div>\r\n    )\r\n}","export let initFunctions = {\r\n    linear: function linear(x, length) {\r\n        return x;\r\n    },\r\n    reverse: function reverse(x, length) {\r\n        return length - x;\r\n    },\r\n    pipeOrgan: function pipeOrgan(x, length) {\r\n        if (x < length / 2) {\r\n            return 2 * x;\r\n        } else {\r\n            return 2 * (length - x) - 1;\r\n        }\r\n    },\r\n    inversedPipeOrgan: function inversedPipeOrgan(x, length){\r\n        if (x < length / 2) {\r\n            return (length - 2*x) - 1;\r\n        } else {\r\n            return x*2-length;\r\n        }\r\n    }\r\n}","import {randomInt} from \"./utils\";\r\n\r\nexport let shuffles = {\r\n    fullShuffle: function (len) {\r\n        let instructions = []\r\n        for (let i = 0; i < len; ++i) {\r\n            let randomIndex = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: i,\r\n                    b:randomIndex\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    },\r\n\r\n    almostSorted: function (len) {\r\n        let instructions = []\r\n        const amount = 0.1\r\n        for (let i = 0; i < len * amount; ++i) {\r\n            let randomIndexA = randomInt(i, len)\r\n            let randomIndexB = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: randomIndexA,\r\n                    b:randomIndexB\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport styles from \"./Controls.module.scss\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\nimport {getAllMethods} from \"../utils/utils\";\r\nimport {shuffles} from \"../utils/shuffles\";\r\n\r\n\r\nexport class Controls extends React.Component {\r\n    isControlShow\r\n    arrayVisualizer\r\n    sorts\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isControlShow = true;\r\n        this.arrayVisualizer = props.arrayVisualizer\r\n        this.sorts = props.sorts\r\n        this.arrayVisualizer.updateArrLength(100)\r\n        this.arrayVisualizer.initArray(initFunctions.linear)\r\n    }\r\n\r\n    updateArrLength() {\r\n        let slider = document.getElementById(styles.slider)\r\n\r\n        if (slider !== null) {\r\n            let len = slider.value\r\n            this.arrayVisualizer.updateArrLength(len)\r\n        }\r\n    }\r\n\r\n    toggleControlShow() {\r\n        // console.log(styles.controls)\r\n        let controlsContainer = document.getElementById(styles.controlsContainer)\r\n        let controls = document.getElementById(styles.controls)\r\n        let btn = document.getElementById(styles.showToggleBtn)\r\n        if (this.isControlShow) {\r\n            controls.style.display = \"none\"\r\n            controlsContainer.style.width = \"0\"\r\n            btn.innerHTML = \"&gt;&gt;\";\r\n        } else {\r\n            controls.style.display = \"block\"\r\n            controlsContainer.style.width = \"20rem\"\r\n            btn.innerHTML = \"&lt;&lt\";\r\n        }\r\n        this.isControlShow = !this.isControlShow\r\n    }\r\n\r\n    initArray(func){\r\n        this.arrayVisualizer.initArray(func, this.arrayVisualizer.arrLength, true)\r\n    }\r\n\r\n    shuffleArray(func){\r\n        this.arrayVisualizer.shuffleArray(func)\r\n    }\r\n\r\n    sortArray(sort){\r\n        this.arrayVisualizer.sortClickEvent(sort)\r\n    }\r\n\r\n    stopSort(){\r\n        this.arrayVisualizer.stopSort()\r\n    }\r\n\r\n    abortSort(){\r\n        this.stopSort()\r\n        this.initArray(initFunctions.linear)\r\n    }\r\n\r\n    genInitFunctions(){\r\n        // console.log(initFunctions)\r\n        let tmp = []\r\n        for (let i in initFunctions) {\r\n            tmp.push(\r\n                <button key={i} onClick={this.initArray.bind(this, initFunctions[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getSorts(){\r\n        let tmp = []\r\n        let methods = getAllMethods(this.sorts)\r\n        for (let i of methods) {\r\n            if(i.includes(\"Sort\"))\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortArray.bind(this, this.sorts[i])}>{i}</button>\r\n                )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getShuffles(){\r\n        let tmp = []\r\n        for(let i in shuffles){\r\n            tmp.push(\r\n                <button key={i} onClick={this.shuffleArray.bind(this, shuffles[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    toggleShowAuxArrays(){\r\n        let element = document.getElementById(\"auxArrShowCB\")\r\n        this.arrayVisualizer.setShowAuxArrays(element.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={styles.controlsContainer}>\r\n                {/*<div onClick={this.toggleControlShow.bind(this)} id={styles.showToggleBtn}>&lt;&lt;</div>*/}\r\n                <div id={styles.controls}>\r\n                    <div>\r\n                        <div className={styles.textCenter}>Array Size</div>\r\n                        <input id={styles.slider} type=\"range\" min=\"10\" max=\"300\" defaultValue={this.arrLength}\r\n                               step=\"10\"\r\n                               onChange={this.updateArrLength.bind(this)}/>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Visuals</div>\r\n                            <div>\r\n                                <input onChange={this.toggleShowAuxArrays.bind(this)} type=\"checkbox\" id=\"auxArrShowCB\" name=\"auxArrShowCB\" defaultChecked={true}/>\r\n                                    <label htmlFor=\"auxArrShowCB\">Show Aux Arrays</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Init Array</div>\r\n                            <div>{this.genInitFunctions()}</div>\r\n                        </div>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Shuffle Array</div>\r\n                            <div>\r\n                                {/*<button onClick={this.shuffleArray.bind(this)}>Random</button>*/}\r\n                                <div>{this.getShuffles()}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort control</div>\r\n                            <div>\r\n                                <button onClick={this.abortSort.bind(this)}>Abort Sort(Recommended)</button>\r\n                                <button onClick={this.stopSort.bind(this)}>Stop Sort(Not Recommended)</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort Array</div>\r\n                            <div>\r\n                                {this.getSorts()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {arraysEquals, deepArrayCopy, getAllMethods, randomInt} from \"../utils/utils\";\r\nimport {Sorts} from \"../Sorts/Sorts\"\r\nimport {ArrayWindow} from \"../ArrayWindow/ArrayWindow\";\r\nimport {Element} from \"../classes/Element\";\r\nimport {Stats} from \"../Stats/Stats\";\r\nimport {Controls} from \"../Controls/Controls\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\n\r\nconst colors = {\r\n    \"Unmarked\": [255, 255, 255],\r\n    \"Default\": [255, 0, 0],\r\n    \"Additional\": [randomInt(0, 256), randomInt(0, 256), randomInt(0, 256)],\r\n    \"Sorted\": [0, 255, 0],\r\n    \"Analysis\": [0, 0, 255]\r\n}\r\n\r\nexport class ArrayVisualizer extends React.Component {\r\n    delays;\r\n    delayInc;\r\n    pseudoArray;\r\n    pseudoAuxArrays;\r\n    arrLength\r\n    ctx\r\n    timeoutArray\r\n    sorts\r\n    delayIncConst\r\n    showAuxArrays\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.arrLength = 100\r\n        this.state = {\r\n            array: this.initArray(initFunctions.linear, this.arrLength),\r\n            sortName: \"\",\r\n            comparisons: 0,\r\n            writes: 0,\r\n            auxArrays: []\r\n        }\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        this.delayIncConst = 3000\r\n        this.instructions = [];\r\n        this.timeoutArray = [];\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.pseudoAuxArrays = []\r\n        this.sorts = new Sorts(this);\r\n        this.arrLength = this.state.length\r\n        this.delayInc = this.delayIncConst/this.arrLength;\r\n        this.showAuxArrays = true\r\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        // this.updateArrLength(this.arrLength);\r\n    }\r\n\r\n    playSound(value) {\r\n        let osc = this.ctx.createOscillator();\r\n        osc.type = 'sine';\r\n\r\n        let k = value / this.arrLength\r\n        osc.frequency.value = 2000 * k + 200;\r\n\r\n\r\n        let addTime = 50\r\n\r\n        let gainNode = this.ctx.createGain()\r\n        gainNode.gain.value = 0;\r\n        osc.connect(gainNode)\r\n        gainNode.connect(this.ctx.destination)\r\n\r\n        gainNode.gain.linearRampToValueAtTime(0.05, this.ctx.currentTime + (this.delayInc + addTime) / 1000 / 2)\r\n        gainNode.gain.linearRampToValueAtTime(0, this.ctx.currentTime + (this.delayInc + addTime) / 1000)\r\n\r\n        osc.start();\r\n        osc.stop(this.ctx.currentTime + (this.delayInc + addTime) / 1000);\r\n\r\n    }\r\n    resetDelay() {\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        for(let i of this.timeoutArray){\r\n            clearTimeout(i);\r\n        }\r\n        this.timeoutArray = []\r\n    }\r\n\r\n    nullify() {\r\n        this.resetDelay()\r\n        this.setState(\r\n            {\r\n                comparisons: 0,\r\n                writes: 0\r\n            }\r\n        )\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.writes = 0;\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.comparisons = 0;\r\n    }\r\n\r\n    mark(index, args, saveArr = true) {\r\n        let type = \"Default\"\r\n        let color = colors[\"Default\"]\r\n        let tmpArr = this.state.array\r\n        // Additional\r\n        if (args.type === \"Additional\") {\r\n            type = \"Additional\"\r\n            color = args.color\r\n            // console.log(color)\r\n        }\r\n        //Default\r\n        else if (!args.type || args.type === \"Default\") {\r\n            type = \"Default\"\r\n            color = colors[\"Default\"]\r\n        } else {\r\n            type = args.type\r\n            color = args.color\r\n        }\r\n\r\n        tmpArr[index].setType(type)\r\n        tmpArr[index].setColor(color)\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n        // console.log(color);\r\n    }\r\n\r\n    markMany(indexes, args, saveArr) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.mark(i, args, saveArr)\r\n            } else {\r\n                tmpArr = this.mark(i, args, saveArr)\r\n            }\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmark(index, saveArr = true) {\r\n        let tmpArr = this.state.array\r\n        tmpArr[index].setColor(colors[\"Unmarked\"])\r\n        tmpArr[index].setType(\"Unmarked\")\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmarkMany(indexes, saveArr, saveOnce) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.unmark(i, saveArr)\r\n            } else {\r\n                tmpArr = this.unmark(i, saveArr)\r\n            }\r\n        }\r\n        if (saveOnce) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n\r\n    markUnmarkMany(markIndexes, markArgs) {\r\n        this.markMany(markIndexes, markArgs, true)\r\n        this.timeoutArray.push(setTimeout(this.unmarkMany.bind(this), this.delays.Unmark += this.delayInc / 100, markIndexes, false, true))\r\n    }\r\n\r\n    swapWithDelay(a, b, arr = this.pseudoArray, mark, delay = this.delayInc, playSound) {\r\n        this.timeoutArray.push(setTimeout(this.swapInArr.bind(this), this.delays.Swap += delay, a, b, arr, mark, playSound))\r\n    }\r\n\r\n\r\n    swapInArr(a, b, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        if(playSound) {\r\n            this.playSound(arr[b].getValue());\r\n        }\r\n        let tmpArr = arr\r\n        // console.log(\"SWAPPING:\" + tmpArr[a].getValue()+\"<->\"+tmpArr[b].getValue())\r\n        let tmp = tmpArr[a]\r\n        tmpArr[a] = tmpArr[b]\r\n        tmpArr[b] = tmp\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 2\r\n        })\r\n    }\r\n\r\n    swap(a, b, arr = this.pseudoArray) {\r\n        this.swapInArr(a, b, arr, false, false)\r\n        // console.log(getVarName(this.state.array.name))\r\n        this.instructions.push(\r\n        {\r\n            cmd: \"swap\",\r\n            arr: arr,\r\n            a: a,\r\n            b: b\r\n        }\r\n        )\r\n        // this.swapWithDelay(a, b, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    writeInArr(index, value, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        // console.log(\"WRITING IN \")\r\n        // console.log(this.getNameByArray(arr))\r\n        // console.log(\"INDEX: \"+index)\r\n        // console.log(\"VALUE: \"+value)\r\n        if(playSound) {\r\n            this.playSound(value)\r\n        }\r\n        arr[index].setValue(value)\r\n        if (mark) {\r\n            this.markUnmarkMany([index], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 1\r\n        })\r\n    }\r\n\r\n    writeWithDelay(index, value, arr = this.pseudoArray, mark, delay = this.delayInc, playSound = true) {\r\n        this.timeoutArray.push(setTimeout(this.writeInArr.bind(this), this.delays.Write += delay, index, value, arr, mark, playSound))\r\n    }\r\n\r\n    write(index, value, arr = this.pseudoArray) {\r\n        this.writeInArr(index, value, arr, false, false)\r\n        this.instructions.push(\r\n            {\r\n                cmd: \"write\",\r\n                arr: arr,\r\n                index: index,\r\n                value: value\r\n            }\r\n        )\r\n        // this.writeWithDelay(index, value, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    read(index, arr = this.pseudoArray) {\r\n        // this.markUnmarkMany([index], {type: \"Default\"})\r\n        this.instructions.push(\r\n            {\r\n             cmd: \"read\",\r\n             arr: arr,\r\n             index: index\r\n            }\r\n        )\r\n        return arr[index].getValue()\r\n    }\r\n\r\n    compare(a, b, sign = \"<\", arr = this.pseudoArray) {\r\n        // this.compMainArrWithDelay(a, b, false)\r\n        if (sign === \"<\") {\r\n            return arr[a].getValue() < arr[b].getValue()\r\n        } else if (sign === \"<=\") {\r\n            return arr[a].getValue() <= arr[b].getValue()\r\n        } else if (sign === \">\") {\r\n            return arr[a].getValue() > arr[b].getValue()\r\n        } else if (sign === \">=\") {\r\n            return arr[a].getValue() >= arr[b].getValue()\r\n        } else {\r\n            return arr[a].getValue() === arr[b].getValue()\r\n        }\r\n    }\r\n\r\n    compMainArr(a, b, mark = false) {\r\n        let curComparisons = this.state.comparisons;\r\n        this.setState({\r\n            comparisons: curComparisons + 1\r\n        })\r\n        console.log(\"Comparisons: \" + this.state.comparisons + \" \" + a + \" \" + b)\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Additional\", color: [0, 0, 255]})\r\n        }\r\n    }\r\n\r\n    compMainArrWithDelay(a, b, mark = false) {\r\n        // setTimeout(this.compMainArr.bind(this), this.delays.Comp += this.delayInc, a, b, mark)\r\n    }\r\n\r\n    createAuxArray(len, isPseudo = true){\r\n        if(isPseudo) {\r\n            let auxArrIndex = this.pseudoAuxArrays.length\r\n            this.pseudoAuxArrays.push(this.initArray(() => 0, len, false))\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"createAuxArray\",\r\n                    len: len\r\n                }\r\n            )\r\n            return auxArrIndex\r\n        }else{\r\n            let tmpArr = this.state.auxArrays\r\n            tmpArr.push(this.initArray(() => 0, len, false))\r\n            this.setState({\r\n                auxArrays: tmpArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    createAuxArrayWithDelay(len, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.createAuxArray.bind(this), this.delays.Write += delay, len, isPseudo))\r\n    }\r\n\r\n    removeAuxArray(index, isPseudo = true){\r\n        if(isPseudo) {\r\n            this.pseudoAuxArrays.splice(index, 1)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"removeAuxArray\",\r\n                    index: index\r\n                }\r\n            )\r\n        }else{\r\n            console.log(\"REMOVING AUX ARRAY: \" + index)\r\n            let tmp = this.state.auxArrays\r\n            tmp.splice(index, 1)\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n            console.log(\"LEN: \" + this.state.auxArrays.length)\r\n            // this.state.auxArrays.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    removeAuxArrayWithDelay(index, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.removeAuxArray.bind(this), this.delays.Write += delay, index, isPseudo))\r\n    }\r\n\r\n    auxRead(index, arrIndex, isPseudo = true){\r\n        if(isPseudo){\r\n            return this.pseudoAuxArrays[arrIndex][index].getValue()\r\n        }else {\r\n            return this.state.auxArrays[arrIndex][index].getValue()\r\n        }\r\n    }\r\n\r\n    auxWrite(index, value, arrIndex, isPseudo = true, playSound = false){\r\n        if(playSound){\r\n            this.playSound(value)\r\n        }\r\n        if(isPseudo){\r\n            this.pseudoAuxArrays[arrIndex][index].setValue(value)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"auxWrite\",\r\n                    index: index,\r\n                    value: value,\r\n                    arrIndex: arrIndex\r\n                }\r\n            )\r\n        }else{\r\n            this.state.auxArrays[arrIndex][index].setValue(value)\r\n            let tmp = this.state.auxArrays\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n        }\r\n    }\r\n\r\n    auxWriteWithDelay(index, value, arrIndex, delay, isPseudo = false, playSound = true, ){\r\n        this.timeoutArray.push(setTimeout(this.auxWrite.bind(this), this.delays.Write += delay, index, value, arrIndex, isPseudo, playSound))\r\n    }\r\n\r\n    getNameByArray(arr){\r\n        // console.log(arr)\r\n        if(arraysEquals(arr, this.state.array)){\r\n            return {name:\"mainArray\"}\r\n        }\r\n        if(arraysEquals(arr, this.pseudoArray)){\r\n            return {name:\"pseudoArray\"}\r\n        }\r\n        for(let i = 0; i < this.pseudoAuxArrays.length;++i){\r\n            if (arraysEquals(arr, this.pseudoAuxArrays[i])){\r\n                return {name:\"pseudoAuxArray\", index:i}\r\n            }\r\n        }\r\n        for(let i = 0; i < this.state.auxArrays.length;++i){\r\n            if (arraysEquals(arr, this.state.auxArrays[i])){\r\n                return {name:\"auxArray\", index:i}\r\n            }\r\n        }\r\n        return \"NotFound\"\r\n    }\r\n\r\n    getArrayByName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if (name===\"mainArray\"){\r\n            return this.state.array\r\n        }\r\n        if(name===\"pseudoArray\"){\r\n            return this.pseudoArray\r\n        }\r\n        if(name===\"auxArray\"){\r\n            console.log(args)\r\n            return this.state.auxArrays[index]\r\n        }\r\n        if(name===\"pseudoAuxArray\"){\r\n            console.log(args)\r\n            return this.pseudoAuxArrays[index]\r\n        }\r\n        return []\r\n    }\r\n\r\n    inverseArrayName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if(name===\"pseudoArray\") {\r\n            return {name:\"mainArray\"}\r\n        }else if(name===\"pseudoAuxArray\"){\r\n            return {name: \"auxArray\", index: index}\r\n        }\r\n        return args\r\n    }\r\n\r\n\r\n    getArrayVisualizer() {\r\n        return this;\r\n    }\r\n\r\n    getPseudoArray() {\r\n        return this.pseudoArray;\r\n    }\r\n\r\n    getState(){\r\n        return this.state\r\n    }\r\n\r\n    getArrLength(){\r\n        return this.arrLength;\r\n    }\r\n\r\n    setShowAuxArrays(val){\r\n        this.showAuxArrays = val\r\n    }\r\n\r\n    stopSort(){\r\n        this.resetDelay()\r\n        this.unmarkMany(Array.from(Array(this.arrLength).keys()), false, true)\r\n    }\r\n\r\n    initArray(func, length, setToState=false) {\r\n        let arr = []\r\n        for (let i = 0; i < length; ++i) {\r\n            let element = new Element(func(i, length), 0, [255, 255, 255])\r\n            arr.push(element)\r\n        }\r\n        if(setToState){\r\n            this.setState({\r\n                array: arr\r\n            })\r\n        }else {\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    shuffleArray(func) {\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: \"Shuffle\"\r\n        })\r\n\r\n        let instructions = func(this.arrLength);\r\n        for(let i of instructions){\r\n            if(i.cmd === \"swap\"){\r\n                setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i.a, i.b, this.state.array, true, true)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    shuffleClickEvent() {\r\n        this.shuffleArray()\r\n    }\r\n\r\n\r\n    sortClickEvent(sort) {\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: sort.name\r\n        })\r\n        this.nullify()\r\n\r\n        let sortBind = sort.bind(this.sorts, 0, this.arrLength - 1)\r\n        sortBind()\r\n        console.log(\"SORTED ARRAY:\")\r\n        console.log(this.pseudoArray)\r\n\r\n        console.log(\"START INTERPRETATION!!\")\r\n        for(let i of this.instructions){\r\n            let cmd = i.cmd\r\n            if([\"swap\", \"read\", \"write\"].includes(cmd)) {\r\n                let arrName = this.getNameByArray(i.arr)\r\n                let arrNameInv = this.inverseArrayName(arrName)\r\n                let arr = this.getArrayByName(arrNameInv)\r\n                // console.log(arrName)\r\n                if (cmd === \"swap\") {\r\n                    this.swapWithDelay(i.a, i.b, arr, true, this.delayInc, true)\r\n                } else if (cmd === \"write\") {\r\n                    // console.log(arrName)\r\n                    // console.log(\"WRITE FROM INTERPRETER!\")\r\n                    // console.log(arr)\r\n                    // console.log(this.getNameByArray(arr))\r\n                    this.writeWithDelay(i.index, i.value, arr, true, this.delayInc, true)\r\n                } else {}\r\n            }\r\n            if(cmd===\"auxWrite\"){\r\n                this.auxWriteWithDelay(i.index, i.value, i.arrIndex, this.delayInc, false, true)\r\n            }\r\n            if(cmd===\"createAuxArray\"){\r\n                this.createAuxArrayWithDelay(i.len, this.delayInc, false)\r\n            }\r\n            if(cmd===\"removeAuxArray\"){\r\n                this.removeAuxArrayWithDelay(i.index, this.delayInc, false)\r\n            }\r\n        }\r\n        this.pseudoAuxArrays = []\r\n        this.instructions = []\r\n    }\r\n\r\n\r\n    updateDelayInc(val){\r\n        this.delayInc = val/this.arrLength;\r\n    }\r\n\r\n    updateArrLength(len){\r\n        this.arrLength = len\r\n        this.setState({\r\n            array: this.initArray(initFunctions.linear, this.arrLength)\r\n        })\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n\r\n        this.sorts.arrLength = this.getArrLength()\r\n        this.updateDelayInc(this.delayIncConst)\r\n    }\r\n\r\n    genArrayWindows(){\r\n        let tmp = []\r\n        if(this.showAuxArrays) {\r\n            console.log(this.state.auxArrays)\r\n            for (let i = this.state.auxArrays.length - 1; i >= 0; i--) {\r\n                tmp.push(\r\n                    <ArrayWindow key={this.state.auxArrays.length - i} array={this.state.auxArrays[i]}\r\n                                 mainArray={this.state.array} height={100 / (1 + this.state.auxArrays.length)}/>\r\n                )\r\n            }\r\n        }\r\n        return tmp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stats sortName={this.state.sortName} comparisons={this.state.comparisons} writes={this.state.writes} arrLength={this.arrLength}/>\r\n                <div style={{height: \"100vh\"}}>\r\n                {/*<div>*/}\r\n                    {this.genArrayWindows()}\r\n                    <ArrayWindow array={this.state.array} mainArray={this.state.array} height={this.showAuxArrays ? 100/(1+this.state.auxArrays.length) : 100}/>\r\n                </div>\r\n                <div>\r\n                    <Controls arrayVisualizer={this} sorts={this.sorts}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {ArrayVisualizer} from \"./components/ArrayVisualizer/ArrayVisualizer\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ArrayVisualizer></ArrayVisualizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}