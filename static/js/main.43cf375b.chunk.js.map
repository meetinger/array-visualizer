{"version":3,"sources":["components/Controls/Controls.module.scss","components/ArrayWindow/ArrayWindow.module.scss","components/Stats/Stats.module.scss","components/classes/Element.js","components/utils/utils.js","components/utils/initFunctions.js","components/Sorts/Sorts.js","components/ArrayWindow/ArrayWindow.js","components/Stats/Stats.js","components/Controls/Controls.js","components/ArrayVisualizer/ArrayVisualizer.js","reportWebVitals.js","index.js"],"names":["module","exports","Element","value","type","color","this","randomInt","a","b","Math","trunc","random","getAllMethods","toCheck","props","obj","push","Object","getOwnPropertyNames","getPrototypeOf","sort","filter","e","i","arr","deepArrayCopy","out","getValue","getType","getColor","initFunctions","linear","x","length","reverse","Sorts","arrayVisualizer","pseudoArray","getPseudoArray","state","getState","compare","bind","swap","read","write","arrLength","getArrLength","lo","hi","pivot","j","len","p","partition","LLQuickSort","m","floor","SlowSort","low","mid","high","leftArray","Array","rightArray","leftIndex","rightIndex","MergeSort","merge","n","largest","l","r","heapify","key","ArrayWindow","array","styleSheet","height","backgroundColor","style","className","styles","bar","width","arrayContainer","Stats","statsContainer","sortName","writes","Controls","isControlShow","sorts","updateArrLength","initArray","slider","document","getElementById","controlsContainer","controls","btn","showToggleBtn","display","innerHTML","func","shuffleArray","sortClickEvent","stopSort","tmp","onClick","methods","includes","sortArray","id","textCenter","min","max","defaultValue","step","onChange","genInitFunctions","abortSort","getSorts","React","Component","colors","ArrayVisualizer","comparisons","delays","Swap","Write","Comp","Unmark","instruction","timeoutArray","delayInc","ctx","window","AudioContext","webkitAudioContext","osc","createOscillator","k","frequency","gainNode","createGain","gain","connect","destination","linearRampToValueAtTime","currentTime","start","stop","clearTimeout","resetDelay","setState","index","args","saveArr","tmpArr","setType","setColor","indexes","mark","saveOnce","unmark","markIndexes","markArgs","markMany","setTimeout","unmarkMany","delay","playSound","swapInArr","markUnmarkMany","curWrites","swapWithDelay","setValue","writeInArr","writeWithDelay","sign","curComparisons","console","log","from","keys","setToState","element","nullify","name","sortBind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.43cf375b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"Controls_textCenter__3_8jn\",\"controls\":\"Controls_controls__3X5vt\",\"showToggleBtn\":\"Controls_showToggleBtn__2CbSs\",\"slider\":\"Controls_slider__3IxWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"ArrayWindow_arrayContainer__jfaB8\",\"bar\":\"ArrayWindow_bar__30QYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__1qOnq\"};","const types = {\r\n\r\n}\r\n\r\nconst colors = {\r\n\r\n}\r\n\r\nexport class Element{\r\n\r\n    value;\r\n    color;\r\n    type;\r\n\r\n    // constructor(args){\r\n    //     this.value = args.value;\r\n    //     this.type = args.type;\r\n    //     this.color = args.color || colors[args.type];\r\n    // }\r\n\r\n    constructor(value, type, color) {\r\n            this.value = value;\r\n            this.type = type;\r\n            this.color = color;\r\n    }\r\n\r\n    getValue(){\r\n        return this.value;\r\n    }\r\n    setValue(value){\r\n        this.value = value;\r\n    }\r\n\r\n    getColor(){\r\n        return this.color;\r\n    }\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    setType(type){\r\n        this.type = type;\r\n    }\r\n}","import {Element} from \"../classes/Element\";\r\nexport function random(a, b) {\r\n    return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInt(a, b) {\r\n    return Math.trunc(random(a, b))\r\n}\r\n\r\nexport function swapObj(json) {\r\n    let ret = {};\r\n    for (let key in json) {\r\n        ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function sleep(ms) {\r\n    ms += new Date().getTime();\r\n    while (new Date() < ms) {\r\n    }\r\n}\r\n\r\nexport function getAllMethods(toCheck) {\r\n    const props = [];\r\n    let obj = toCheck;\r\n    do {\r\n        props.push(...Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props.sort().filter((e, i, arr) => {\r\n        if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n    });\r\n}\r\n\r\nexport function deepArrayCopy(arr){\r\n    let out = [];\r\n    for(let i of arr){\r\n        let value = i.getValue();\r\n        let type = i.getType();\r\n        let color = i.getColor();\r\n        out.push(new Element(value, type, color))\r\n    }\r\n    return out;\r\n}","export let initFunctions = {\r\n    linear: function linear(x, length) {\r\n        return x;\r\n    },\r\n    reverse: function reverse(x, length) {\r\n        return length - x;\r\n    }\r\n}\r\nexport function linear(x, length) {\r\n    return x;\r\n}","export class Sorts {\r\n    arrayVisualizer;\r\n    array;\r\n    pseudoArray;\r\n\r\n    compare;\r\n    swap;\r\n    write;\r\n\r\n    arrLength;\r\n\r\n    constructor(arrayVisualizer) {\r\n        // super(arrayVisualizer)\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.pseudoArray = this.arrayVisualizer.getPseudoArray()\r\n        this.state = this.arrayVisualizer.getState()\r\n        this.compare = this.arrayVisualizer.compare.bind(arrayVisualizer)\r\n        this.swap = this.arrayVisualizer.swap.bind(arrayVisualizer)\r\n        this.read = this.arrayVisualizer.read.bind(arrayVisualizer)\r\n        this.write = this.arrayVisualizer.write.bind(arrayVisualizer)\r\n        this.arrLength = this.arrayVisualizer.getArrLength();\r\n    }\r\n\r\n    partition(lo, hi) {\r\n        let pivot = hi;\r\n        let i = lo;\r\n        for (let j = lo; j < hi; j++) {\r\n            if (this.compare(j, pivot, \"<\")) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, hi);\r\n        return i;\r\n    }\r\n\r\n    BubbleSort() {\r\n        let len = this.arrLength;\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                if (this.compare(j, j + 1, \">\")) {\r\n                    this.swap(j, j + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    LLQuickSort(lo, hi) {\r\n        if (lo < hi) {\r\n            let p = this.partition(lo, hi);\r\n            this.LLQuickSort(lo, p - 1);\r\n            this.LLQuickSort(p + 1, hi);\r\n        }\r\n    }\r\n\r\n\r\n    SlowSort(i, j) {\r\n        if (i >= j) {\r\n            return;\r\n        }\r\n        let m = Math.floor((i + j) / 2);\r\n        this.SlowSort(i, m);\r\n        this.SlowSort(m + 1, j);\r\n        if (this.compare(j, m, \"<\")) {\r\n            this.swap(j, m)\r\n        }\r\n        this.SlowSort(i, j - 1)\r\n    }\r\n\r\n    merge(low, mid, high) {\r\n        let leftArray = new Array(mid - low + 1);\r\n        let rightArray = new Array(high - mid);\r\n\r\n        // Copying our subarrays into temporaries\r\n        for (let i = 0; i < leftArray.length; i++) {\r\n            // leftArray[i] = array[low + i];\r\n            leftArray[i] = this.read(low + i)\r\n        }\r\n        for (let i = 0; i < rightArray.length; i++) {\r\n            // rightArray[i] = array[mid + i + 1];\r\n            rightArray[i] = this.read(mid + i + 1);\r\n        }\r\n\r\n        // Iterators containing current index of temp subarrays\r\n        let leftIndex = 0;\r\n        let rightIndex = 0;\r\n\r\n        // Copying from leftArray and rightArray back into array\r\n        for (let i = low; i < high + 1; i++) {\r\n            // If there are still uncopied elements in R and L, copy minimum of the two\r\n            if (leftIndex < leftArray.length && rightIndex < rightArray.length) {\r\n                if (leftArray[leftIndex] < rightArray[rightIndex]) {\r\n                    // array[i] = leftArray[leftIndex];\r\n                    this.write(i, leftArray[leftIndex])\r\n                    leftIndex++;\r\n                } else {\r\n                    // array[i] = rightArray[rightIndex];\r\n                    this.write(i, rightArray[rightIndex])\r\n                    rightIndex++;\r\n                }\r\n            } else if (leftIndex < leftArray.length) {\r\n                // If all elements have been copied from rightArray, copy rest of leftArray\r\n                // array[i] = leftArray[leftIndex];\r\n                this.write(i, leftArray[leftIndex])\r\n                leftIndex++;\r\n            } else if (rightIndex < rightArray.length) {\r\n                // If all elements have been copied from leftArray, copy rest of rightArray\r\n                // array[i] = rightArray[rightIndex];\r\n                this.write(i, rightArray[rightIndex])\r\n                rightIndex++;\r\n            }\r\n        }\r\n    }\r\n\r\n    MergeSort(low, high) {\r\n        if (high <= low) return;\r\n\r\n        let mid = Math.trunc((low + high) / 2)\r\n        this.MergeSort(low, mid);\r\n        this.MergeSort(mid + 1, high);\r\n        this.merge(low, mid, high);\r\n    }\r\n\r\n    heapify(n, i) {\r\n        let largest = i;\r\n\r\n        let l = 2 * i + 1;\r\n        let r = 2 * i + 2;\r\n\r\n        if (l < n && this.compare(l, largest, \">\")) {\r\n            largest = l;\r\n        }\r\n        if (r < n && this.compare(r, largest, \">\")) {\r\n            largest = r;\r\n        }\r\n\r\n        if (largest !== i) {\r\n            this.swap(i, largest);\r\n            this.heapify(n, largest);\r\n        }\r\n    }\r\n\r\n    HeapSort() {\r\n        let n = this.arrLength;\r\n\r\n\r\n        for (let i = Math.trunc(n / 2) - 1; i >= 0; i--) {\r\n            this.heapify(n, i);\r\n        }\r\n\r\n        for(let i = n-1; i >= 0; i--){\r\n            this.swap(0, i);\r\n            this.heapify(i, 0)\r\n        }\r\n    }\r\n\r\n    InsertionSort(){\r\n        let length = this.arrLength;\r\n        for (let i = 1; i < length; i++) {\r\n            let key = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= 0 && this.read(j) > key) {\r\n                this.write(j+1, this.read(j))\r\n                j = j - 1;\r\n            }\r\n            this.write(j+1, key)\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport styles from \"./ArrayWindow.module.scss\";\r\n\r\nexport function ArrayWindow(props){\r\n    let array = props.array\r\n    // let style = props.style\r\n\r\n    let arr = []\r\n\r\n    for (let i = 0; i < array.length; ++i) {\r\n        let styleSheet = {\r\n            height: array[i].getValue() / array.length * 100 + \"%\",\r\n            backgroundColor: \"rgb(\" + array[i].getColor() + \")\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    return (\r\n        <div style={{width: \"100%\"}}>\r\n            <div className={styles.arrayContainer}>\r\n                {arr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Stats.module.scss\";\r\n\r\nexport function Stats(props){\r\n    return(\r\n        <div className={styles.statsContainer}>\r\n            <div><b>Sort: {props.sortName}</b></div>\r\n            <div>Length: {props.arrLength}</div>\r\n            {/*<div>Comparisons: {props.comparisons}</div>*/}\r\n            <div>Writes: {props.writes}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styles from \"./Controls.module.scss\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\nimport {getAllMethods} from \"../utils/utils\";\r\n\r\n\r\nexport class Controls extends React.Component {\r\n    isControlShow\r\n    arrayVisualizer\r\n    sorts\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isControlShow = true;\r\n        this.arrayVisualizer = props.arrayVisualizer\r\n        this.sorts = props.sorts\r\n        this.arrayVisualizer.updateArrLength(100)\r\n        this.arrayVisualizer.initArray(initFunctions.linear)\r\n    }\r\n\r\n    updateArrLength() {\r\n        let slider = document.getElementById(styles.slider)\r\n\r\n        if (slider !== null) {\r\n            let len = slider.value\r\n            this.arrayVisualizer.updateArrLength(len)\r\n        }\r\n    }\r\n\r\n    toggleControlShow() {\r\n        // console.log(styles.controls)\r\n        let controlsContainer = document.getElementById(styles.controlsContainer)\r\n        let controls = document.getElementById(styles.controls)\r\n        let btn = document.getElementById(styles.showToggleBtn)\r\n        if (this.isControlShow) {\r\n            controls.style.display = \"none\"\r\n            controlsContainer.style.width = \"0\"\r\n            btn.innerHTML = \"&gt;&gt;\";\r\n        } else {\r\n            controls.style.display = \"block\"\r\n            controlsContainer.style.width = \"20rem\"\r\n            btn.innerHTML = \"&lt;&lt\";\r\n        }\r\n        this.isControlShow = !this.isControlShow\r\n    }\r\n\r\n    initArray(func){\r\n        this.arrayVisualizer.initArray(func, this.arrayVisualizer.arrLength, true)\r\n    }\r\n\r\n    shuffleArray(){\r\n        this.arrayVisualizer.shuffleArray()\r\n    }\r\n\r\n    sortArray(sort){\r\n        this.arrayVisualizer.sortClickEvent(sort)\r\n    }\r\n\r\n    stopSort(){\r\n        this.arrayVisualizer.stopSort()\r\n    }\r\n\r\n    abortSort(){\r\n        this.stopSort()\r\n        this.initArray(initFunctions.linear)\r\n    }\r\n\r\n    genInitFunctions(){\r\n        // console.log(initFunctions)\r\n        let tmp = []\r\n        for (let i in initFunctions) {\r\n            tmp.push(\r\n                <button key={i} onClick={this.initArray.bind(this, initFunctions[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getSorts(){\r\n        let tmp = []\r\n        let methods = getAllMethods(this.sorts)\r\n        for (let i of methods) {\r\n            if(i.includes(\"Sort\"))\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortArray.bind(this, this.sorts[i])}>{i}</button>\r\n                )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={styles.controlsContainer}>\r\n                {/*<div onClick={this.toggleControlShow.bind(this)} id={styles.showToggleBtn}>&lt;&lt;</div>*/}\r\n                <div id={styles.controls}>\r\n                    <div>\r\n                        <div className={styles.textCenter}>Array Size</div>\r\n                        <input id={styles.slider} type=\"range\" min=\"10\" max=\"300\" defaultValue={this.arrLength}\r\n                               step=\"10\"\r\n                               onChange={this.updateArrLength.bind(this)}/>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Init Array</div>\r\n                            <div>{this.genInitFunctions()}</div>\r\n                        </div>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Shuffle Array</div>\r\n                            <div>\r\n                                <button onClick={this.shuffleArray.bind(this)}>Random</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort control</div>\r\n                            <div>\r\n                                <button onClick={this.stopSort.bind(this)}>Stop Sort(Not Recommended)</button>\r\n                                <button onClick={this.abortSort.bind(this)}>Abort Sort(Recommended)</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort Array</div>\r\n                            <div>\r\n                                {this.getSorts()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {deepArrayCopy, getAllMethods, randomInt} from \"../utils/utils\";\r\nimport {linear} from \"../utils/initFunctions\"\r\nimport {Sorts} from \"../Sorts/Sorts\"\r\nimport {ArrayWindow} from \"../ArrayWindow/ArrayWindow\";\r\nimport {Element} from \"../classes/Element\";\r\nimport {Stats} from \"../Stats/Stats\";\r\nimport {Controls} from \"../Controls/Controls\";\r\n\r\nconst colors = {\r\n    \"Unmarked\": [255, 255, 255],\r\n    \"Default\": [255, 0, 0],\r\n    \"Additional\": [randomInt(0, 256), randomInt(0, 256), randomInt(0, 256)],\r\n    \"Sorted\": [0, 255, 0],\r\n    \"Analysis\": [0, 0, 255]\r\n}\r\n\r\nexport class ArrayVisualizer extends React.Component {\r\n    delays;\r\n    delayInc;\r\n    pseudoArray;\r\n    arrLength\r\n    ctx\r\n    timeoutArray\r\n    sorts\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.arrLength = 100\r\n        this.state = {\r\n            array: this.initArray(linear, this.arrLength),\r\n            sortName: \"\",\r\n            comparisons: 0,\r\n            writes: 0\r\n        }\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0\r\n        }\r\n        this.instruction = [];\r\n        this.timeoutArray = [];\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.sorts = new Sorts(this);\r\n        this.arrLength = this.state.length\r\n        this.delayInc = 3000/this.state.length;\r\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        // this.updateArrLength(this.arrLength);\r\n    }\r\n\r\n    playSound(value) {\r\n        let osc = this.ctx.createOscillator();\r\n        osc.type = 'sine';\r\n\r\n        let k = value / this.arrLength\r\n        osc.frequency.value = 2000 * k + 200;\r\n\r\n\r\n        let addTime = 50\r\n\r\n        let gainNode = this.ctx.createGain()\r\n        gainNode.gain.value = 0;\r\n        osc.connect(gainNode)\r\n        gainNode.connect(this.ctx.destination)\r\n\r\n        gainNode.gain.linearRampToValueAtTime(0.05, this.ctx.currentTime + (this.delayInc + addTime) / 1000 / 2)\r\n        gainNode.gain.linearRampToValueAtTime(0, this.ctx.currentTime + (this.delayInc + addTime) / 1000)\r\n\r\n        osc.start();\r\n        osc.stop(this.ctx.currentTime + (this.delayInc + addTime) / 1000);\r\n\r\n    }\r\n\r\n    resetDelay() {\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0\r\n        }\r\n        for(let i of this.timeoutArray){\r\n            clearTimeout(i);\r\n        }\r\n        this.timeoutArray = []\r\n    }\r\n\r\n    nullify() {\r\n        this.resetDelay()\r\n        this.setState(\r\n            {\r\n                comparisons: 0,\r\n                writes: 0\r\n            }\r\n        )\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.writes = 0;\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.comparisons = 0;\r\n    }\r\n\r\n    mark(index, args, saveArr = true) {\r\n        let type = \"Default\"\r\n        let color = colors[\"Default\"]\r\n        let tmpArr = this.state.array\r\n        // Additional\r\n        if (args.type === \"Additional\") {\r\n            type = \"Additional\"\r\n            color = args.color\r\n            // console.log(color)\r\n        }\r\n        //Default\r\n        else if (!args.type || args.type === \"Default\") {\r\n            type = \"Default\"\r\n            color = colors[\"Default\"]\r\n        } else {\r\n            type = args.type\r\n            color = args.color\r\n        }\r\n\r\n        tmpArr[index].setType(type)\r\n        tmpArr[index].setColor(color)\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n        // console.log(color);\r\n    }\r\n\r\n    markMany(indexes, args, saveArr) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.mark(i, args, saveArr)\r\n            } else {\r\n                tmpArr = this.mark(i, args, saveArr)\r\n            }\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmark(index, saveArr = true) {\r\n        let tmpArr = this.state.array\r\n        tmpArr[index].setColor(colors[\"Unmarked\"])\r\n        tmpArr[index].setType(\"Unmarked\")\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmarkMany(indexes, saveArr, saveOnce) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.unmark(i, saveArr)\r\n            } else {\r\n                tmpArr = this.unmark(i, saveArr)\r\n            }\r\n        }\r\n        if (saveOnce) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n\r\n    markUnmarkMany(markIndexes, markArgs) {\r\n        this.markMany(markIndexes, markArgs, true)\r\n        this.timeoutArray.push(setTimeout(this.unmarkMany.bind(this), this.delays.Unmark += this.delayInc / 100, markIndexes, false, true))\r\n    }\r\n\r\n    swapWithDelay(a, b, mark, delay = this.delayInc, arr = this.pseudoArray, playSound) {\r\n        this.timeoutArray.push(setTimeout(this.swapInArr.bind(this), this.delays.Swap += delay, a, b, mark, arr, playSound))\r\n    }\r\n\r\n\r\n    swapInArr(a, b, mark = true, arr = this.pseudoArray, playSound=false) {\r\n        if(playSound) {\r\n            this.playSound(arr[b].getValue());\r\n        }\r\n        let tmpArr = arr\r\n        // console.log(\"SWAPPING:\" + tmpArr[a].getValue()+\"<->\"+tmpArr[b].getValue())\r\n        let tmp = tmpArr[a]\r\n        tmpArr[a] = tmpArr[b]\r\n        tmpArr[b] = tmp\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 2\r\n        })\r\n    }\r\n\r\n    swap(a, b) {\r\n        this.swapInArr(a, b, false, this.pseudoArray, false)\r\n        this.swapWithDelay(a, b, true, this.delayInc, this.state.array, true)\r\n    }\r\n\r\n    writeInArr(index, value, mark = true, arr = this.pseudoArray, playSound=false) {\r\n        if(playSound) {\r\n            this.playSound(value)\r\n        }\r\n        arr[index].setValue(value)\r\n        if (mark) {\r\n            this.markUnmarkMany([index], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 1\r\n        })\r\n    }\r\n\r\n    writeWithDelay(index, value, mark, delay = this.delayInc, arr = this.pseudoArray, playSound=true) {\r\n        this.timeoutArray.push(setTimeout(this.writeInArr.bind(this), this.delays.Write += delay, index, value, mark, arr, playSound))\r\n    }\r\n\r\n    write(index, value) {\r\n        this.writeInArr(index, value, false, this.pseudoArray, false)\r\n        this.writeWithDelay(index, value, true, this.delayInc, this.state.array, true)\r\n    }\r\n\r\n    read(index, arr = this.pseudoArray) {\r\n        // this.markUnmarkMany([index], {type: \"Default\"})\r\n        return arr[index].getValue()\r\n    }\r\n\r\n    compare(a, b, sign = \"<\", arr = this.pseudoArray) {\r\n        // this.compMainArrWithDelay(a, b, false)\r\n        if (sign === \"<\") {\r\n            return arr[a].getValue() < arr[b].getValue()\r\n        } else if (sign === \"<=\") {\r\n            return arr[a].getValue() <= arr[b].getValue()\r\n        } else if (sign === \">\") {\r\n            return arr[a].getValue() > arr[b].getValue()\r\n        } else if (sign === \">=\") {\r\n            return arr[a].getValue() >= arr[b].getValue()\r\n        } else {\r\n            return arr[a].getValue() === arr[b].getValue()\r\n        }\r\n    }\r\n\r\n    compMainArr(a, b, mark = false) {\r\n        let curComparisons = this.state.comparisons;\r\n        this.setState({\r\n            comparisons: curComparisons + 1\r\n        })\r\n        console.log(\"Comparisons: \" + this.state.comparisons + \" \" + a + \" \" + b)\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Additional\", color: [0, 0, 255]})\r\n        }\r\n    }\r\n\r\n    compMainArrWithDelay(a, b, mark = false) {\r\n        // setTimeout(this.compMainArr.bind(this), this.delays.Comp += this.delayInc, a, b, mark)\r\n    }\r\n\r\n    getArrayVisualizer() {\r\n        return this;\r\n    }\r\n\r\n    getPseudoArray() {\r\n        return this.pseudoArray;\r\n    }\r\n\r\n    getState(){\r\n        return this.state\r\n    }\r\n\r\n    getArrLength(){\r\n        return this.arrLength;\r\n    }\r\n\r\n    stopSort(){\r\n        this.resetDelay()\r\n        this.unmarkMany(Array.from(Array(this.arrLength).keys()), false, true)\r\n    }\r\n\r\n    initArray(func, length, setToState=false) {\r\n        let arr = []\r\n        for (let i = 0; i < length; ++i) {\r\n            let element = new Element(func(i, length), 0, [255, 255, 255])\r\n            arr.push(element)\r\n        }\r\n        if(setToState){\r\n            this.setState({\r\n                array: arr\r\n            })\r\n        }else {\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    shuffleArray() {\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: \"Shuffle\"\r\n        })\r\n        for (let i = 0; i < this.state.array.length; ++i) {\r\n            // this.swap(i, randomInt(0, this.state.array.length))\r\n            if (this.delayInc === 0) {\r\n                this.swapWithDelay(i, randomInt(0, this.state.array.length), true, this.delayInc / 5, this.state.array, false)\r\n            } else {\r\n                setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i, randomInt(0, this.state.array.length), true, this.state.array, true)\r\n            }\r\n            // sleep(50)\r\n        }\r\n    }\r\n\r\n    shuffleClickEvent() {\r\n        this.shuffleArray()\r\n    }\r\n\r\n\r\n    sortClickEvent(sort) {\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: sort.name\r\n        })\r\n        this.nullify()\r\n        // sort(0, this.state.array.length - 1)\r\n\r\n        let sortBind = sort.bind(this.sorts, 0, this.state.array.length - 1)\r\n        sortBind()\r\n    }\r\n\r\n    genSorts() {\r\n        let tmp = []\r\n        let methods = getAllMethods(this.sorts)\r\n        for (let i of methods) {\r\n            if(i.includes(\"Sort\"))\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortClickEvent.bind(this, this.sorts[i])}>{i}</button>\r\n                )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    // updateArrLength(){\r\n    //     let slider = document.getElementById(\"slider\")\r\n    //\r\n    //     if(slider !== null){\r\n    //         this.arrLength = slider.value\r\n    //         this.setState({\r\n    //             array: this.initArray(linear, this.arrLength)\r\n    //         })\r\n    //         this.pseudoArray = deepArrayCopy(this.state.array)\r\n    //     }\r\n    //     this.sorts.arrLength = this.getArrLength()\r\n    //     this.delayInc = 5000/this.arrLength;\r\n    // }\r\n\r\n    updateArrLength(len){\r\n        this.arrLength = len\r\n        this.setState({\r\n            array: this.initArray(linear, this.arrLength)\r\n        })\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n\r\n        this.sorts.arrLength = this.getArrLength()\r\n        this.delayInc = 3000/this.arrLength;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stats sortName={this.state.sortName} comparisons={this.state.comparisons} writes={this.state.writes} arrLength={this.arrLength}/>\r\n                <div style={{display: \"flex\"}}>\r\n                    <ArrayWindow array={this.state.array}/>\r\n                </div>\r\n                <div>\r\n                    <Controls arrayVisualizer={this} sorts={this.sorts}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {ArrayVisualizer} from \"./components/ArrayVisualizer/ArrayVisualizer\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ArrayVisualizer></ArrayVisualizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}