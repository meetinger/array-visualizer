{"version":3,"sources":["components/Sorts/Sort.js","components/Controls/Controls.module.scss","components/ArrayWindow/ArrayWindow.module.scss","components/Sorts/Sorts.js","components/Stats/Stats.module.scss","components/Sorts sync /^/.*/.js$","components/Sorts/BubbleSort.js","components/Sorts/HeapSort.js","components/Sorts/InsertionSort.js","components/Sorts/LLQuickSort.js","components/Sorts/MergeSort.js","components/Sorts/PseudoTimSort.js","components/Sorts/SelectionSort.js","components/Sorts/SlowSort.js","components/Sorts/StoogeSort.js","components/classes/Element.js","components/utils/utils.js","components/ArrayWindow/ArrayWindow.js","components/Stats/Stats.js","components/utils/initFunctions.js","components/utils/shuffles.js","components/Controls/Controls.js","components/ArrayVisualizer/ArrayVisualizer.js","reportWebVitals.js","index.js"],"names":["Sort","arrayVisualizer","this","state","getState","compare","bind","swap","read","write","createAuxArray","removeAuxArray","auxRead","auxWrite","arrLength","getArrLength","sortName","warnLen","isDisabled","low","high","bucketsNum","module","exports","Sorts","sortsPaths","sortPath","require","sort","getSortObject","getWarnLen","window","confirm","initPseudoArray","setSortName","getSortName","runSort","sortClickEvent","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","BubbleSort","len","i","j","HeapSort","n","largest","l","r","heapify","Math","trunc","InsertionSort","length","key","LLQuickSort","lo","hi","pivot","p","partition","MergeSort","mid","leftArrayLen","rightArrayLen","leftArrayIndex","rightArrayIndex","leftIndex","rightIndex","merge","PseudoTimSort","MIN_MERGE","left","right","temp","m","len1","len2","x","k","minRun","minRunLength","insertionSort","min","size","timSort","SelectionSort","minIndex","SlowSort","floor","StoogeSort","t","Element","value","type","color","randomInt","a","b","random","deepArrayCopy","arr","out","getValue","getType","getColor","push","arraysEquals","every","v","ArrayWindow","props","array","mainArray","height","styleSheet","backgroundColor","style","className","styles","bar","width","arrayContainer","Stats","statsContainer","writes","initFunctions","linear","reverse","pipeOrgan","inversedPipeOrgan","shuffles","fullShuffle","instructions","randomIndex","cmd","almostSorted","randomIndexA","randomIndexB","Controls","isControlShow","sorts","updateArrLength","initArray","slider","document","getElementById","controlsContainer","controls","btn","showToggleBtn","display","innerHTML","func","shuffleArray","stopSort","tmp","onClick","sortsNames","getSortsPaths","sortArray","element","setShowAuxArrays","checked","textCenter","max","defaultValue","step","onChange","toggleShowAuxArrays","name","defaultChecked","htmlFor","genInitFunctions","getShuffles","abortSort","getSorts","React","Component","colors","ArrayVisualizer","comparisons","auxArrays","delays","Swap","Write","Comp","Unmark","CreateAuxArray","RemoveAuxArray","delayIncConst","timeoutArray","pseudoArray","pseudoAuxArrays","delayInc","showAuxArrays","ctx","AudioContext","webkitAudioContext","osc","createOscillator","frequency","gainNode","createGain","gain","connect","destination","linearRampToValueAtTime","currentTime","start","stop","clearTimeout","resetDelay","setState","index","args","saveArr","tmpArr","setType","setColor","indexes","mark","saveOnce","unmark","markIndexes","markArgs","markMany","setTimeout","unmarkMany","delay","playSound","swapInArr","markUnmarkMany","curWrites","setValue","writeInArr","sign","curComparisons","console","log","isPseudo","auxArrIndex","splice","arrIndex","val","Array","from","setToState","nullify","includes","arrName","getNameByArray","arrNameInv","inverseArrayName","getArrayByName","swapWithDelay","writeWithDelay","auxWriteWithDelay","createAuxArrayWithDelay","removeAuxArrayWithDelay","updateDelayInc","genArrayWindows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.49515a4b.chunk.js","sourcesContent":["export class Sort {\r\n    arrayVisualizer;\r\n\r\n    compare;\r\n    swap;\r\n    write;\r\n    read;\r\n\r\n    createAuxArray\r\n    removeAuxArray\r\n\r\n    auxRead\r\n    auxWrite\r\n\r\n    arrLength;\r\n\r\n    sortName;\r\n    warnLen;\r\n    isDisabled;\r\n\r\n    constructor(arrayVisualizer) {\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.state = this.arrayVisualizer.getState()\r\n        this.compare = this.arrayVisualizer.compare.bind(arrayVisualizer)\r\n        this.swap = this.arrayVisualizer.swap.bind(arrayVisualizer)\r\n        this.read = this.arrayVisualizer.read.bind(arrayVisualizer)\r\n        this.write = this.arrayVisualizer.write.bind(arrayVisualizer)\r\n        this.createAuxArray = this.arrayVisualizer.createAuxArray.bind(arrayVisualizer)\r\n        this.removeAuxArray = this.arrayVisualizer.removeAuxArray.bind(arrayVisualizer)\r\n        this.auxRead = this.arrayVisualizer.auxRead.bind(arrayVisualizer)\r\n        this.auxWrite = this.arrayVisualizer.auxWrite.bind(arrayVisualizer)\r\n        this.arrLength = this.arrayVisualizer.getArrLength();\r\n        this.sortName = \"\"\r\n        this.warnLen = -1;\r\n        this.isDisabled = false;\r\n    }\r\n\r\n    getSortName(){\r\n        return this.sortName\r\n    }\r\n\r\n    getWarnLen(){\r\n        return this.warnLen\r\n    }\r\n\r\n    runSort(low, high, bucketsNum){\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textCenter\":\"Controls_textCenter__3_8jn\",\"controls\":\"Controls_controls__3X5vt\",\"showToggleBtn\":\"Controls_showToggleBtn__2CbSs\",\"slider\":\"Controls_slider__3IxWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrayContainer\":\"ArrayWindow_arrayContainer__jfaB8\",\"bar\":\"ArrayWindow_bar__30QYB\"};","export class Sorts {\r\n    arrayVisualizer;\r\n    sortsPaths\r\n\r\n    constructor(arrayVisualizer) {\r\n        this.arrayVisualizer = arrayVisualizer\r\n        this.sortsPaths = [\"BubbleSort\", \"MergeSort\", \"LLQuickSort\", \"InsertionSort\", \"SelectionSort\", \"PseudoTimSort\", \"HeapSort\", \"SlowSort\", \"StoogeSort\"]\r\n    }\r\n\r\n    getSortsPaths() {\r\n        return this.sortsPaths;\r\n    }\r\n\r\n    getSortObject(sortPath) {\r\n        let Sort = require(\"./\" + sortPath + \".js\")[sortPath]\r\n        return new Sort(this.arrayVisualizer)\r\n    }\r\n\r\n    runSort(sortName, low, high, bucketsNum) {\r\n        let sort = this.getSortObject(sortName)\r\n        let warnLen = sort.getWarnLen()\r\n        if (warnLen !== -1 && this.arrayVisualizer.getArrLength() > warnLen && !window.confirm(\"WARNING!!!\\nThe array size(\" + this.arrayVisualizer.getArrLength() + \") \" +\r\n            \"more than recommended(\" + warnLen + \")\\nApplication may freeze\\nDo you want continue?\")) {\r\n            return\r\n        }\r\n        this.arrayVisualizer.initPseudoArray()\r\n        this.arrayVisualizer.setSortName(sort.getSortName())\r\n        sort.runSort(low, high, bucketsNum)\r\n        this.arrayVisualizer.sortClickEvent()\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainer\":\"Stats_statsContainer__1qOnq\"};","var map = {\n\t\"./BubbleSort.js\": 24,\n\t\"./HeapSort.js\": 25,\n\t\"./InsertionSort.js\": 26,\n\t\"./LLQuickSort.js\": 27,\n\t\"./MergeSort.js\": 28,\n\t\"./PseudoTimSort.js\": 29,\n\t\"./SelectionSort.js\": 30,\n\t\"./SlowSort.js\": 31,\n\t\"./Sort.js\": 5,\n\t\"./Sorts.js\": 14,\n\t\"./StoogeSort.js\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","import {Sort} from \"./Sort\";\r\n\r\nexport class BubbleSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"BubbleSort\"\r\n    }\r\n    BubbleSort() {\r\n        let len = this.arrLength;\r\n        for (let i = 0; i < len; i++) {\r\n            for (let j = 0; j < len - i - 1; j++) {\r\n                if (this.compare(j, j + 1, \">\")) {\r\n                    this.swap(j, j + 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.BubbleSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class HeapSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"HeapSort\"\r\n    }\r\n    \r\n    heapify(n, i) {\r\n        let largest = i;\r\n\r\n        let l = 2 * i + 1;\r\n        let r = 2 * i + 2;\r\n\r\n        if (l < n && this.compare(l, largest, \">\")) {\r\n            largest = l;\r\n        }\r\n        if (r < n && this.compare(r, largest, \">\")) {\r\n            largest = r;\r\n        }\r\n\r\n        if (largest !== i) {\r\n            this.swap(i, largest);\r\n            this.heapify(n, largest);\r\n        }\r\n    }\r\n\r\n    HeapSort() {\r\n        let n = this.arrLength;\r\n\r\n\r\n        for (let i = Math.trunc(n / 2) - 1; i >= 0; i--) {\r\n            this.heapify(n, i);\r\n        }\r\n\r\n        for (let i = n - 1; i >= 0; i--) {\r\n            this.swap(0, i);\r\n            this.heapify(i, 0)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.HeapSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class InsertionSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"InsertionSort\"\r\n    }\r\n\r\n    InsertionSort() {\r\n        let length = this.arrLength;\r\n        for (let i = 1; i < length; i++) {\r\n            let key = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= 0 && this.read(j) > key) {\r\n                this.write(j + 1, this.read(j))\r\n                j = j - 1;\r\n            }\r\n            this.write(j + 1, key)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.InsertionSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class LLQuickSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"LLQuickSort\"\r\n    }\r\n    partition(lo, hi) {\r\n        let pivot = hi;\r\n        let i = lo;\r\n        for (let j = lo; j < hi; j++) {\r\n            if (this.compare(j, pivot, \"<\")) {\r\n                this.swap(i, j);\r\n                i++;\r\n            }\r\n        }\r\n        this.swap(i, hi);\r\n        return i;\r\n    }\r\n\r\n    LLQuickSort(lo, hi) {\r\n        if (lo < hi) {\r\n            let p = this.partition(lo, hi);\r\n            this.LLQuickSort(lo, p - 1);\r\n            this.LLQuickSort(p + 1, hi);\r\n        }\r\n    }\r\n    runSort(low, high) {\r\n        this.LLQuickSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class MergeSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"MergeSort\"\r\n    }\r\n    merge(low, mid, high) {\r\n        // let leftArray = new Array(mid - low + 1);\r\n        // let rightArray = new Array(high - mid);\r\n\r\n        let leftArrayLen = mid - low + 1\r\n        let rightArrayLen = high - mid\r\n\r\n        let leftArrayIndex = this.createAuxArray(leftArrayLen);\r\n        let rightArrayIndex = this.createAuxArray(rightArrayLen);\r\n\r\n        for (let i = 0; i < leftArrayLen; i++) {\r\n            // leftArray[i] = this.read(low + i)\r\n            this.auxWrite(i, this.read(low + i), leftArrayIndex)\r\n        }\r\n        for (let i = 0; i < rightArrayLen; i++) {\r\n            // rightArray[i] = this.read(mid + i + 1);\r\n            this.auxWrite(i, this.read(mid + i + 1), rightArrayIndex)\r\n        }\r\n\r\n        let leftIndex = 0;\r\n        let rightIndex = 0;\r\n\r\n        for (let i = low; i < high + 1; i++) {\r\n            if (leftIndex < leftArrayLen && rightIndex < rightArrayLen) {\r\n                // if (leftArray[leftIndex] < rightArray[rightIndex]) {\r\n                if (this.auxRead(leftIndex, leftArrayIndex) < this.auxRead(rightIndex, rightArrayIndex)) {\r\n                    this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                    leftIndex++;\r\n                } else {\r\n                    this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                    rightIndex++;\r\n                }\r\n            } else if (leftIndex < leftArrayLen) {\r\n                this.write(i, this.auxRead(leftIndex, leftArrayIndex))\r\n                leftIndex++;\r\n            } else if (rightIndex < rightArrayLen) {\r\n                this.write(i, this.auxRead(rightIndex, rightArrayIndex))\r\n                rightIndex++;\r\n            }\r\n        }\r\n        // console.log(leftArray)\r\n        // console.log(rightArray)\r\n        this.removeAuxArray(rightArrayIndex)\r\n        this.removeAuxArray(leftArrayIndex)\r\n    }\r\n\r\n    MergeSort(low, high) {\r\n        if (high <= low) return;\r\n\r\n        let mid = Math.trunc((low + high) / 2)\r\n        this.MergeSort(low, mid);\r\n        this.MergeSort(mid + 1, high);\r\n        this.merge(low, mid, high);\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.MergeSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class PseudoTimSort extends Sort {\r\n    MIN_MERGE\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"PseudoTimSort\"\r\n        this.MIN_MERGE = 32\r\n    }\r\n\r\n    minRunLength(n) {\r\n        let r = 0;\r\n        while (n >= this.MIN_MERGE)\r\n        {\r\n            r |= (n & 1);\r\n            n >>= 1;\r\n        }\r\n        return n + r;\r\n    }\r\n\r\n    insertionSort(left, right) {\r\n        for (let i = left + 1; i <= right; i++) {\r\n            let temp = this.read(i);\r\n            let j = i - 1;\r\n            while (j >= left && this.read(j) > temp) {\r\n                this.write(j + 1, this.read(j))\r\n                j--;\r\n            }\r\n            this.write(j + 1, temp)\r\n        }\r\n    }\r\n\r\n    merge(l, m, r) {\r\n        let len1 = m - l + 1, len2 = r - m;\r\n        let left = this.createAuxArray(len1);\r\n        let right = this.createAuxArray(len2);\r\n        for(let x = 0; x < len1; x++)\r\n        {\r\n            // left[x] = arr[l + x];\r\n            this.auxWrite(x, this.read(l+x), left)\r\n        }\r\n        for(let x = 0; x < len2; x++)\r\n        {\r\n            // right[x] = arr[m + 1 + x];\r\n            this.auxWrite(x, this.read(m + 1 + x), right)\r\n        }\r\n\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = l;\r\n\r\n        while (i < len1 && j < len2)\r\n        {\r\n            // if (left[i] <= right[j])\r\n            if(this.auxRead(i, left) <= this.auxRead(j, right))\r\n            {\r\n                // arr[k] = left[i];\r\n                this.write(k, this.auxRead(i, left))\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                // arr[k] = right[j];\r\n                this.write(k, this.auxRead(j, right))\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n\r\n        while (i < len1) {\r\n            // arr[k] = left[i];\r\n            this.write(k, this.auxRead(i, left))\r\n            k++;\r\n            i++;\r\n        }\r\n\r\n        while (j < len2) {\r\n            this.write(k, this.auxRead(j, right))\r\n            k++;\r\n            j++;\r\n        }\r\n        this.removeAuxArray(right)\r\n        this.removeAuxArray(left)\r\n    }\r\n\r\n    timSort(n)\r\n    {\r\n        let minRun = this.minRunLength(this.MIN_MERGE);\r\n\r\n        for(let i = 0; i < n; i += minRun)\r\n        {\r\n            this.insertionSort(i, Math.min(\r\n                (i + this.MIN_MERGE - 1), (n - 1)));\r\n        }\r\n\r\n        for(let size = minRun; size < n; size = 2 * size) {\r\n            for(let left = 0; left < n; left += 2 * size) {\r\n                let mid = left + size - 1;\r\n                let right = Math.min((left + 2 * size - 1), (n - 1));\r\n                if(mid < right) {\r\n                    this.merge(left, mid, right);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.timSort(high+1)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class SelectionSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"SelectionSort\"\r\n    }\r\n\r\n    SelectionSort() {\r\n        for (let i=0; i < this.arrLength; i++) {\r\n            let minIndex = i\r\n            for (let j=i; j < this.arrLength; j++) {\r\n                if (this.compare(j, minIndex, \"<\")) {\r\n                    minIndex = j\r\n                }\r\n            }\r\n\r\n            if (this.compare(i, minIndex, \">\")) {\r\n                this.swap(i, minIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.SelectionSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class SlowSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"SlowSort\"\r\n        this.warnLen = 120\r\n    }\r\n\r\n    SlowSort(i, j) {\r\n        if (i >= j) {\r\n            return;\r\n        }\r\n        let m = Math.floor((i + j) / 2);\r\n        this.SlowSort(i, m);\r\n        this.SlowSort(m + 1, j);\r\n        if (this.compare(j, m, \"<\")) {\r\n            this.swap(j, m)\r\n        }\r\n        this.SlowSort(i, j - 1)\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.SlowSort(low, high)\r\n    }\r\n}","import {Sort} from \"./Sort\";\r\n\r\nexport class StoogeSort extends Sort{\r\n    constructor(arrayVisualizer) {\r\n        super(arrayVisualizer);\r\n        this.sortName = \"StoogeSort\"\r\n    }\r\n\r\n    StoogeSort(i, j) {\r\n        if (this.compare(i, j, \">\")) {\r\n            this.swap(i, j)\r\n        }\r\n        if (j - i > 1) {\r\n            let t = Math.trunc((j - i + 1) / 3)\r\n            this.StoogeSort(i, j - t)\r\n            this.StoogeSort(i + t, j)\r\n            this.StoogeSort(i, j - t)\r\n        }\r\n    }\r\n\r\n    runSort(low, high) {\r\n        this.StoogeSort(low, high)\r\n    }\r\n}","const types = {\r\n\r\n}\r\n\r\nconst colors = {\r\n\r\n}\r\n\r\nexport class Element{\r\n\r\n    value;\r\n    color;\r\n    type;\r\n\r\n    // constructor(args){\r\n    //     this.value = args.value;\r\n    //     this.type = args.type;\r\n    //     this.color = args.color || colors[args.type];\r\n    // }\r\n\r\n    constructor(value, type, color) {\r\n            this.value = value;\r\n            this.type = type;\r\n            this.color = color;\r\n    }\r\n\r\n    getValue(){\r\n        return this.value;\r\n    }\r\n    setValue(value){\r\n        this.value = value;\r\n    }\r\n\r\n    getColor(){\r\n        return this.color;\r\n    }\r\n    setColor(color){\r\n        this.color = color;\r\n    }\r\n\r\n    getType(){\r\n        return this.type;\r\n    }\r\n    setType(type){\r\n        this.type = type;\r\n    }\r\n}","import {Element} from \"../classes/Element\";\r\nexport function random(a, b) {\r\n    return Math.random() * (b - a) + a;\r\n}\r\n\r\nexport function randomInt(a, b) {\r\n    return Math.trunc(random(a, b))\r\n}\r\n\r\nexport function swapObj(json) {\r\n    let ret = {};\r\n    for (let key in json) {\r\n        ret[json[key]] = key;\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function sleep(ms) {\r\n    ms += new Date().getTime();\r\n    while (new Date() < ms) {\r\n    }\r\n}\r\n\r\nexport function getAllMethods(toCheck) {\r\n    const props = [];\r\n    let obj = toCheck;\r\n    do {\r\n        props.push(...Object.getOwnPropertyNames(obj));\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props.sort().filter((e, i, arr) => {\r\n        if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n    });\r\n}\r\n\r\nexport function deepArrayCopy(arr){\r\n    let out = [];\r\n    for(let i of arr){\r\n        let value = i.getValue();\r\n        let type = i.getType();\r\n        let color = i.getColor();\r\n        out.push(new Element(value, type, color))\r\n    }\r\n    return out;\r\n}\r\n\r\nexport function arraysEquals(a, b){\r\n    return a.length === b.length &&\r\n    a.every((v, i) => v === b[i]);\r\n}","import React from 'react';\r\nimport styles from \"./ArrayWindow.module.scss\";\r\n\r\nexport function ArrayWindow(props){\r\n    let array = props.array\r\n    let mainArray = props.mainArray\r\n    let height = props.height\r\n    // let style = props.style\r\n    // console.log(array)\r\n    let arr = []\r\n\r\n    for (let i = 0; i < array.length; ++i) {\r\n        let styleSheet = {\r\n            height: array[i].getValue() / mainArray.length * 100 + \"%\",\r\n            backgroundColor: \"rgb(\" + array[i].getColor() + \")\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    for(let i = array.length;i < mainArray.length;++i){\r\n        let styleSheet = {\r\n            height: \"0%\",\r\n            backgroundColor: \"rgb(255,255,255)\"\r\n        }\r\n        arr.push(<div key={i} style={styleSheet} className={styles.bar}/>);\r\n    }\r\n    if(array.length===0){\r\n        return <div/>\r\n    }\r\n    return (\r\n        <div style={{width: \"100%\", height: height+\"%\"}}>\r\n            <div className={styles.arrayContainer}>\r\n                {arr}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./Stats.module.scss\";\r\n\r\nexport function Stats(props){\r\n    return(\r\n        <div className={styles.statsContainer}>\r\n            <div><b>Sort: {props.sortName}</b></div>\r\n            <div>Length: {props.arrLength}</div>\r\n            {/*<div>Comparisons: {props.comparisons}</div>*/}\r\n            <div>Writes: {props.writes}</div>\r\n        </div>\r\n    )\r\n}","export let initFunctions = {\r\n    linear: function linear(x, length) {\r\n        return x;\r\n    },\r\n    reverse: function reverse(x, length) {\r\n        return length - x;\r\n    },\r\n    pipeOrgan: function pipeOrgan(x, length) {\r\n        if (x < length / 2) {\r\n            return 2 * x;\r\n        } else {\r\n            return 2 * (length - x) - 1;\r\n        }\r\n    },\r\n    inversedPipeOrgan: function inversedPipeOrgan(x, length){\r\n        if (x < length / 2) {\r\n            return (length - 2*x) - 1;\r\n        } else {\r\n            return x*2-length;\r\n        }\r\n    }\r\n}","import {randomInt} from \"./utils\";\r\n\r\nexport let shuffles = {\r\n    fullShuffle: function (len) {\r\n        let instructions = []\r\n        for (let i = 0; i < len; ++i) {\r\n            let randomIndex = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: i,\r\n                    b:randomIndex\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    },\r\n\r\n    almostSorted: function (len) {\r\n        let instructions = []\r\n        const amount = 0.1\r\n        for (let i = 0; i < len * amount; ++i) {\r\n            let randomIndexA = randomInt(i, len)\r\n            let randomIndexB = randomInt(i, len)\r\n            instructions.push(\r\n                {\r\n                    cmd: \"swap\",\r\n                    a: randomIndexA,\r\n                    b:randomIndexB\r\n                }\r\n            )\r\n        }\r\n        return instructions\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport styles from \"./Controls.module.scss\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\nimport {getAllMethods} from \"../utils/utils\";\r\nimport {shuffles} from \"../utils/shuffles\";\r\n\r\n\r\nexport class Controls extends React.Component {\r\n    isControlShow\r\n    arrayVisualizer\r\n    sorts\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.isControlShow = true;\r\n        this.arrayVisualizer = props.arrayVisualizer\r\n        this.sorts = props.sorts\r\n        this.arrayVisualizer.updateArrLength(100)\r\n        this.arrayVisualizer.initArray(initFunctions.linear)\r\n    }\r\n\r\n    updateArrLength() {\r\n        let slider = document.getElementById(styles.slider)\r\n\r\n        if (slider !== null) {\r\n            let len = slider.value\r\n            this.arrayVisualizer.updateArrLength(len)\r\n        }\r\n    }\r\n\r\n    toggleControlShow() {\r\n        // console.log(styles.controls)\r\n        let controlsContainer = document.getElementById(styles.controlsContainer)\r\n        let controls = document.getElementById(styles.controls)\r\n        let btn = document.getElementById(styles.showToggleBtn)\r\n        if (this.isControlShow) {\r\n            controls.style.display = \"none\"\r\n            controlsContainer.style.width = \"0\"\r\n            btn.innerHTML = \"&gt;&gt;\";\r\n        } else {\r\n            controls.style.display = \"block\"\r\n            controlsContainer.style.width = \"20rem\"\r\n            btn.innerHTML = \"&lt;&lt\";\r\n        }\r\n        this.isControlShow = !this.isControlShow\r\n    }\r\n\r\n    initArray(func){\r\n        this.arrayVisualizer.initArray(func, this.arrayVisualizer.arrLength, true)\r\n    }\r\n\r\n    shuffleArray(func){\r\n        this.arrayVisualizer.shuffleArray(func)\r\n    }\r\n\r\n    sortArray(sortName){\r\n        this.sorts.runSort(sortName, 0, this.arrayVisualizer.getArrLength()-1, 10)\r\n    }\r\n\r\n    stopSort(){\r\n        this.arrayVisualizer.stopSort()\r\n    }\r\n\r\n    abortSort(){\r\n        this.stopSort()\r\n        this.initArray(initFunctions.linear)\r\n    }\r\n\r\n    genInitFunctions(){\r\n        // console.log(initFunctions)\r\n        let tmp = []\r\n        for (let i in initFunctions) {\r\n            tmp.push(\r\n                <button key={i} onClick={this.initArray.bind(this, initFunctions[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getSorts(){\r\n        let tmp = []\r\n        let sortsNames = this.sorts.getSortsPaths()\r\n        for (let i of sortsNames) {\r\n                tmp.push(\r\n                    <button key={i} onClick={this.sortArray.bind(this, i)}>{i}</button>)\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    getShuffles(){\r\n        let tmp = []\r\n        for(let i in shuffles){\r\n            tmp.push(\r\n                <button key={i} onClick={this.shuffleArray.bind(this, shuffles[i])}>{i}</button>\r\n            )\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    toggleShowAuxArrays(){\r\n        let element = document.getElementById(\"auxArrShowCB\")\r\n        this.arrayVisualizer.setShowAuxArrays(element.checked)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={styles.controlsContainer}>\r\n                {/*<div onClick={this.toggleControlShow.bind(this)} id={styles.showToggleBtn}>&lt;&lt;</div>*/}\r\n                <div id={styles.controls}>\r\n                    <div>\r\n                        <div className={styles.textCenter}>Array Size</div>\r\n                        <input id={styles.slider} type=\"range\" min=\"10\" max=\"300\" defaultValue={this.arrLength}\r\n                               step=\"10\"\r\n                               onChange={this.updateArrLength.bind(this)}/>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Visuals</div>\r\n                            <div>\r\n                                <input onChange={this.toggleShowAuxArrays.bind(this)} type=\"checkbox\" id=\"auxArrShowCB\" name=\"auxArrShowCB\" defaultChecked={true}/>\r\n                                    <label htmlFor=\"auxArrShowCB\">Show Aux Arrays</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Init Array</div>\r\n                            <div>{this.genInitFunctions()}</div>\r\n                        </div>\r\n\r\n                        <div className={styles.textCenter}>\r\n                            <div>Shuffle Array</div>\r\n                            <div>\r\n                                {/*<button onClick={this.shuffleArray.bind(this)}>Random</button>*/}\r\n                                <div>{this.getShuffles()}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort control</div>\r\n                            <div>\r\n                                <button onClick={this.abortSort.bind(this)}>Abort Sort(Recommended)</button>\r\n                                <button onClick={this.stopSort.bind(this)}>Stop Sort(Not Recommended)</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.textCenter}>\r\n                            <div>Sort Array</div>\r\n                            <div>\r\n                                {this.getSorts()}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {arraysEquals, deepArrayCopy, getAllMethods, randomInt} from \"../utils/utils\";\r\nimport {Sorts} from \"../Sorts/Sorts\"\r\nimport {ArrayWindow} from \"../ArrayWindow/ArrayWindow\";\r\nimport {Element} from \"../classes/Element\";\r\nimport {Stats} from \"../Stats/Stats\";\r\nimport {Controls} from \"../Controls/Controls\";\r\nimport {initFunctions} from \"../utils/initFunctions\";\r\n\r\nconst colors = {\r\n    \"Unmarked\": [255, 255, 255],\r\n    \"Default\": [255, 0, 0],\r\n    \"Additional\": [randomInt(0, 256), randomInt(0, 256), randomInt(0, 256)],\r\n    \"Sorted\": [0, 255, 0],\r\n    \"Analysis\": [0, 0, 255]\r\n}\r\n\r\nexport class ArrayVisualizer extends React.Component {\r\n    delays;\r\n    delayInc;\r\n    pseudoArray;\r\n    pseudoAuxArrays;\r\n    arrLength\r\n    ctx\r\n    timeoutArray\r\n    sorts\r\n    delayIncConst\r\n    showAuxArrays\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.arrLength = 100\r\n        this.state = {\r\n            array: this.initArray(initFunctions.linear, this.arrLength),\r\n            sortName: \"\",\r\n            comparisons: 0,\r\n            writes: 0,\r\n            auxArrays: []\r\n        }\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        this.delayIncConst = 3000\r\n        this.instructions = [];\r\n        this.timeoutArray = [];\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n        this.pseudoAuxArrays = []\r\n        this.sorts = new Sorts(this);\r\n        this.arrLength = this.state.length\r\n        this.delayInc = this.delayIncConst/this.arrLength;\r\n        this.showAuxArrays = true\r\n        this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n        // this.updateArrLength(this.arrLength);\r\n    }\r\n\r\n    playSound(value) {\r\n        let osc = this.ctx.createOscillator();\r\n        osc.type = 'sine';\r\n\r\n        let k = value / this.arrLength\r\n        osc.frequency.value = 2000 * k + 200;\r\n\r\n\r\n        let addTime = 50\r\n\r\n        let gainNode = this.ctx.createGain()\r\n        gainNode.gain.value = 0;\r\n        osc.connect(gainNode)\r\n        gainNode.connect(this.ctx.destination)\r\n\r\n        gainNode.gain.linearRampToValueAtTime(0.05, this.ctx.currentTime + (this.delayInc + addTime) / 1000 / 2)\r\n        gainNode.gain.linearRampToValueAtTime(0, this.ctx.currentTime + (this.delayInc + addTime) / 1000)\r\n\r\n        osc.start();\r\n        osc.stop(this.ctx.currentTime + (this.delayInc + addTime) / 1000);\r\n\r\n    }\r\n    resetDelay() {\r\n        this.delays = {\r\n            Swap: 0,\r\n            Write: 0,\r\n            Comp: 0,\r\n            Unmark: 0,\r\n            CreateAuxArray: 0,\r\n            RemoveAuxArray: 0\r\n        }\r\n        for(let i of this.timeoutArray){\r\n            clearTimeout(i);\r\n        }\r\n        this.timeoutArray = []\r\n    }\r\n\r\n    nullify() {\r\n        this.resetDelay()\r\n        this.setState(\r\n            {\r\n                comparisons: 0,\r\n                writes: 0\r\n            }\r\n        )\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.writes = 0;\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state.comparisons = 0;\r\n    }\r\n\r\n    mark(index, args, saveArr = true) {\r\n        let type = \"Default\"\r\n        let color = colors[\"Default\"]\r\n        let tmpArr = this.state.array\r\n        // Additional\r\n        if (args.type === \"Additional\") {\r\n            type = \"Additional\"\r\n            color = args.color\r\n            // console.log(color)\r\n        }\r\n        //Default\r\n        else if (!args.type || args.type === \"Default\") {\r\n            type = \"Default\"\r\n            color = colors[\"Default\"]\r\n        } else {\r\n            type = args.type\r\n            color = args.color\r\n        }\r\n\r\n        tmpArr[index].setType(type)\r\n        tmpArr[index].setColor(color)\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n        // console.log(color);\r\n    }\r\n\r\n    markMany(indexes, args, saveArr) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.mark(i, args, saveArr)\r\n            } else {\r\n                tmpArr = this.mark(i, args, saveArr)\r\n            }\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmark(index, saveArr = true) {\r\n        let tmpArr = this.state.array\r\n        tmpArr[index].setColor(colors[\"Unmarked\"])\r\n        tmpArr[index].setType(\"Unmarked\")\r\n        if (saveArr) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        } else {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n    unmarkMany(indexes, saveArr, saveOnce) {\r\n        let tmpArr = this.state.array\r\n        for (let i of indexes) {\r\n            if (saveArr) {\r\n                this.unmark(i, saveArr)\r\n            } else {\r\n                tmpArr = this.unmark(i, saveArr)\r\n            }\r\n        }\r\n        if (saveOnce) {\r\n            this.setState({\r\n                array: tmpArr\r\n            })\r\n        }\r\n        if (!saveArr) {\r\n            return tmpArr\r\n        }\r\n    }\r\n\r\n\r\n    markUnmarkMany(markIndexes, markArgs) {\r\n        this.markMany(markIndexes, markArgs, true)\r\n        this.timeoutArray.push(setTimeout(this.unmarkMany.bind(this), this.delays.Unmark += this.delayInc / 100, markIndexes, false, true))\r\n    }\r\n\r\n    swapWithDelay(a, b, arr = this.pseudoArray, mark, delay = this.delayInc, playSound) {\r\n        this.timeoutArray.push(setTimeout(this.swapInArr.bind(this), this.delays.Swap += delay, a, b, arr, mark, playSound))\r\n    }\r\n\r\n\r\n    swapInArr(a, b, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        if(playSound) {\r\n            this.playSound(arr[b].getValue());\r\n        }\r\n        let tmpArr = arr\r\n        // console.log(\"SWAPPING:\" + tmpArr[a].getValue()+\"<->\"+tmpArr[b].getValue())\r\n        let tmp = tmpArr[a]\r\n        tmpArr[a] = tmpArr[b]\r\n        tmpArr[b] = tmp\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 2\r\n        })\r\n    }\r\n\r\n    swap(a, b, arr = this.pseudoArray) {\r\n        this.swapInArr(a, b, arr, false, false)\r\n        // console.log(getVarName(this.state.array.name))\r\n        this.instructions.push(\r\n        {\r\n            cmd: \"swap\",\r\n            arr: arr,\r\n            a: a,\r\n            b: b\r\n        }\r\n        )\r\n        // this.swapWithDelay(a, b, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    writeInArr(index, value, arr = this.pseudoArray, mark = true, playSound = false) {\r\n        // console.log(\"WRITING IN \")\r\n        // console.log(this.getNameByArray(arr))\r\n        // console.log(\"INDEX: \"+index)\r\n        // console.log(\"VALUE: \"+value)\r\n        if(playSound) {\r\n            this.playSound(value)\r\n        }\r\n        arr[index].setValue(value)\r\n        if (mark) {\r\n            this.markUnmarkMany([index], {type: \"Default\"})\r\n        }\r\n        let curWrites = this.state.writes;\r\n        this.setState({\r\n            writes: curWrites + 1\r\n        })\r\n    }\r\n\r\n    writeWithDelay(index, value, arr = this.pseudoArray, mark, delay = this.delayInc, playSound = true) {\r\n        this.timeoutArray.push(setTimeout(this.writeInArr.bind(this), this.delays.Write += delay, index, value, arr, mark, playSound))\r\n    }\r\n\r\n    write(index, value, arr = this.pseudoArray) {\r\n        this.writeInArr(index, value, arr, false, false)\r\n        this.instructions.push(\r\n            {\r\n                cmd: \"write\",\r\n                arr: arr,\r\n                index: index,\r\n                value: value\r\n            }\r\n        )\r\n        // this.writeWithDelay(index, value, this.state.array, true, this.delayInc, true)\r\n    }\r\n\r\n    read(index, arr = this.pseudoArray) {\r\n        // this.markUnmarkMany([index], {type: \"Default\"})\r\n        this.instructions.push(\r\n            {\r\n             cmd: \"read\",\r\n             arr: arr,\r\n             index: index\r\n            }\r\n        )\r\n        return arr[index].getValue()\r\n    }\r\n\r\n    compare(a, b, sign = \"<\", arr = this.pseudoArray) {\r\n        // this.compMainArrWithDelay(a, b, false)\r\n        if (sign === \"<\") {\r\n            return arr[a].getValue() < arr[b].getValue()\r\n        } else if (sign === \"<=\") {\r\n            return arr[a].getValue() <= arr[b].getValue()\r\n        } else if (sign === \">\") {\r\n            return arr[a].getValue() > arr[b].getValue()\r\n        } else if (sign === \">=\") {\r\n            return arr[a].getValue() >= arr[b].getValue()\r\n        } else {\r\n            return arr[a].getValue() === arr[b].getValue()\r\n        }\r\n    }\r\n\r\n    compMainArr(a, b, mark = false) {\r\n        let curComparisons = this.state.comparisons;\r\n        this.setState({\r\n            comparisons: curComparisons + 1\r\n        })\r\n        console.log(\"Comparisons: \" + this.state.comparisons + \" \" + a + \" \" + b)\r\n        if (mark) {\r\n            this.markUnmarkMany([a, b], {type: \"Additional\", color: [0, 0, 255]})\r\n        }\r\n    }\r\n\r\n    compMainArrWithDelay(a, b, mark = false) {\r\n        // setTimeout(this.compMainArr.bind(this), this.delays.Comp += this.delayInc, a, b, mark)\r\n    }\r\n\r\n    createAuxArray(len, isPseudo = true){\r\n        if(isPseudo) {\r\n            let auxArrIndex = this.pseudoAuxArrays.length\r\n            this.pseudoAuxArrays.push(this.initArray(() => 0, len, false))\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"createAuxArray\",\r\n                    len: len\r\n                }\r\n            )\r\n            return auxArrIndex\r\n        }else{\r\n            let tmpArr = this.state.auxArrays\r\n            tmpArr.push(this.initArray(() => 0, len, false))\r\n            this.setState({\r\n                auxArrays: tmpArr\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    createAuxArrayWithDelay(len, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.createAuxArray.bind(this), this.delays.Write += delay, len, isPseudo))\r\n    }\r\n\r\n    removeAuxArray(index, isPseudo = true){\r\n        if(isPseudo) {\r\n            this.pseudoAuxArrays.splice(index, 1)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"removeAuxArray\",\r\n                    index: index\r\n                }\r\n            )\r\n        }else{\r\n            let tmp = this.state.auxArrays\r\n            tmp.splice(index, 1)\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n            // this.state.auxArrays.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    removeAuxArrayWithDelay(index, delay, isPseudo = false){\r\n        this.timeoutArray.push(setTimeout(this.removeAuxArray.bind(this), this.delays.Write += delay, index, isPseudo))\r\n    }\r\n\r\n    auxRead(index, arrIndex, isPseudo = true){\r\n        if(isPseudo){\r\n            return this.pseudoAuxArrays[arrIndex][index].getValue()\r\n        }else {\r\n            return this.state.auxArrays[arrIndex][index].getValue()\r\n        }\r\n    }\r\n\r\n    auxWrite(index, value, arrIndex, isPseudo = true, playSound = false){\r\n        if(playSound){\r\n            this.playSound(value)\r\n        }\r\n        if(isPseudo){\r\n            this.pseudoAuxArrays[arrIndex][index].setValue(value)\r\n            this.instructions.push(\r\n                {\r\n                    cmd: \"auxWrite\",\r\n                    index: index,\r\n                    value: value,\r\n                    arrIndex: arrIndex\r\n                }\r\n            )\r\n        }else{\r\n            this.state.auxArrays[arrIndex][index].setValue(value)\r\n            let tmp = this.state.auxArrays\r\n            this.setState({\r\n                auxArrays: tmp\r\n            })\r\n        }\r\n    }\r\n\r\n    auxWriteWithDelay(index, value, arrIndex, delay, isPseudo = false, playSound = true, ){\r\n        this.timeoutArray.push(setTimeout(this.auxWrite.bind(this), this.delays.Write += delay, index, value, arrIndex, isPseudo, playSound))\r\n    }\r\n\r\n    getNameByArray(arr){\r\n        // console.log(arr)\r\n        if(arraysEquals(arr, this.state.array)){\r\n            return {name:\"mainArray\"}\r\n        }\r\n        if(arraysEquals(arr, this.pseudoArray)){\r\n            return {name:\"pseudoArray\"}\r\n        }\r\n        for(let i = 0; i < this.pseudoAuxArrays.length;++i){\r\n            if (arraysEquals(arr, this.pseudoAuxArrays[i])){\r\n                return {name:\"pseudoAuxArray\", index:i}\r\n            }\r\n        }\r\n        for(let i = 0; i < this.state.auxArrays.length;++i){\r\n            if (arraysEquals(arr, this.state.auxArrays[i])){\r\n                return {name:\"auxArray\", index:i}\r\n            }\r\n        }\r\n        return \"NotFound\"\r\n    }\r\n\r\n    getArrayByName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if (name===\"mainArray\"){\r\n            return this.state.array\r\n        }\r\n        if(name===\"pseudoArray\"){\r\n            return this.pseudoArray\r\n        }\r\n        if(name===\"auxArray\"){\r\n            console.log(args)\r\n            return this.state.auxArrays[index]\r\n        }\r\n        if(name===\"pseudoAuxArray\"){\r\n            console.log(args)\r\n            return this.pseudoAuxArrays[index]\r\n        }\r\n        return []\r\n    }\r\n\r\n    inverseArrayName(args){\r\n        let name = args.name\r\n        let index = args.index\r\n        if(name===\"pseudoArray\") {\r\n            return {name:\"mainArray\"}\r\n        }else if(name===\"pseudoAuxArray\"){\r\n            return {name: \"auxArray\", index: index}\r\n        }\r\n        return args\r\n    }\r\n\r\n\r\n    getArrayVisualizer() {\r\n        return this;\r\n    }\r\n\r\n    getPseudoArray() {\r\n        return this.pseudoArray;\r\n    }\r\n\r\n    getState(){\r\n        return this.state\r\n    }\r\n\r\n    getArrLength(){\r\n        return this.arrLength;\r\n    }\r\n\r\n    setShowAuxArrays(val){\r\n        this.showAuxArrays = val\r\n    }\r\n\r\n    stopSort(){\r\n        this.resetDelay()\r\n        this.unmarkMany(Array.from(Array(this.arrLength).keys()), false, true)\r\n        this.setState({\r\n                auxArrays: []\r\n            }\r\n        )\r\n    }\r\n\r\n    initArray(func, length, setToState=false) {\r\n        let arr = []\r\n        for (let i = 0; i < length; ++i) {\r\n            let element = new Element(func(i, length), 0, [255, 255, 255])\r\n            arr.push(element)\r\n        }\r\n        if(setToState){\r\n            this.setState({\r\n                array: arr\r\n            })\r\n        }else {\r\n            return arr;\r\n        }\r\n    }\r\n\r\n    shuffleArray(func) {\r\n        this.nullify()\r\n        this.setState({\r\n            sortName: \"Shuffle\"\r\n        })\r\n\r\n        let instructions = func(this.arrLength);\r\n        for(let i of instructions){\r\n            if(i.cmd === \"swap\"){\r\n                setTimeout(this.swapInArr.bind(this), this.delays.Swap += this.delayInc / 5, i.a, i.b, this.state.array, true, true)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    shuffleClickEvent() {\r\n        this.shuffleArray()\r\n    }\r\n\r\n    setSortName(sortName){\r\n        this.setState({\r\n            sortName: sortName\r\n        })\r\n    }\r\n\r\n    initPseudoArray(){\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n    }\r\n\r\n    // sortClickEvent(sortName, low, high, bucketsNum) {\r\n    sortClickEvent() {\r\n        this.nullify()\r\n\r\n        // let sortBind = sort.bind(this.sorts, 0, this.arrLength - 1)\r\n        // sortBind()\r\n        // console.log(sort)\r\n        // let sort = this.sorts.getSortObject(sortName)\r\n        //\r\n        // this.setState({\r\n        //     sortName: sort.getSortName()\r\n        // })\r\n\r\n        // let warnLen = sort.getWarnLen()\r\n        // if(warnLen!==-1 && this.arrLength > warnLen && !window.confirm(\"WARNING!!!\\nThe array size(\"+this.arrLength+\") \" +\r\n        //     \"more than recommended(\"+warnLen+\")\\nApplication may freeze\\nDo you want continue?\")){\r\n        //     return\r\n        // }\r\n\r\n        // sort.runSort(low, high, bucketsNum)\r\n\r\n        console.log(\"SORTED ARRAY:\")\r\n        console.log(this.pseudoArray)\r\n\r\n        console.log(\"START INTERPRETATION!!\")\r\n        for(let i of this.instructions){\r\n            let cmd = i.cmd\r\n            if([\"swap\", \"read\", \"write\"].includes(cmd)) {\r\n                let arrName = this.getNameByArray(i.arr)\r\n                let arrNameInv = this.inverseArrayName(arrName)\r\n                let arr = this.getArrayByName(arrNameInv)\r\n                // console.log(arrName)\r\n                if (cmd === \"swap\") {\r\n                    this.swapWithDelay(i.a, i.b, arr, true, this.delayInc, true)\r\n                } else if (cmd === \"write\") {\r\n                    // console.log(arrName)\r\n                    // console.log(\"WRITE FROM INTERPRETER!\")\r\n                    // console.log(arr)\r\n                    // console.log(this.getNameByArray(arr))\r\n                    this.writeWithDelay(i.index, i.value, arr, true, this.delayInc, true)\r\n                } else {}\r\n            }\r\n            if(cmd===\"auxWrite\"){\r\n                this.auxWriteWithDelay(i.index, i.value, i.arrIndex, this.delayInc, false, true)\r\n            }\r\n            if(cmd===\"createAuxArray\"){\r\n                this.createAuxArrayWithDelay(i.len, this.delayInc, false)\r\n            }\r\n            if(cmd===\"removeAuxArray\"){\r\n                this.removeAuxArrayWithDelay(i.index, this.delayInc, false)\r\n            }\r\n        }\r\n        this.pseudoAuxArrays = []\r\n        this.instructions = []\r\n    }\r\n\r\n\r\n    updateDelayInc(val){\r\n        this.delayInc = val/this.arrLength;\r\n    }\r\n\r\n    updateArrLength(len){\r\n        this.arrLength = len\r\n        this.setState({\r\n            array: this.initArray(initFunctions.linear, this.arrLength)\r\n        })\r\n        this.pseudoArray = deepArrayCopy(this.state.array)\r\n\r\n        this.sorts.arrLength = this.getArrLength()\r\n        this.updateDelayInc(this.delayIncConst)\r\n    }\r\n\r\n    genArrayWindows(){\r\n        let tmp = []\r\n        if(this.showAuxArrays) {\r\n            for (let i = this.state.auxArrays.length - 1; i >= 0; i--) {\r\n                tmp.push(\r\n                    <ArrayWindow key={this.state.auxArrays.length - i} array={this.state.auxArrays[i]}\r\n                                 mainArray={this.state.array} height={100 / (1 + this.state.auxArrays.length)}/>\r\n                )\r\n            }\r\n        }\r\n        return tmp\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stats sortName={this.state.sortName} comparisons={this.state.comparisons} writes={this.state.writes} arrLength={this.arrLength}/>\r\n                <div style={{height: \"100vh\"}}>\r\n                {/*<div>*/}\r\n                    {this.genArrayWindows()}\r\n                    <ArrayWindow array={this.state.array} mainArray={this.state.array} height={this.showAuxArrays ? 100/(1+this.state.auxArrays.length) : 100}/>\r\n                </div>\r\n                <div>\r\n                    <Controls arrayVisualizer={this} sorts={this.sorts}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {ArrayVisualizer} from \"./components/ArrayVisualizer/ArrayVisualizer\";\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ArrayVisualizer></ArrayVisualizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}